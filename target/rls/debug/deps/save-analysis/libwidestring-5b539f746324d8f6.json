{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0","program":"C:\\Users\\Rooshan Ahmed\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","widestring","C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=5b539f746324d8f6","-C","extra-filename=-5b539f746324d8f6","--out-dir","c:\\Users\\Rooshan Ahmed\\Desktop\\active\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Rooshan Ahmed\\Desktop\\active\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Rooshan Ahmed\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Rooshan Ahmed\\Desktop\\active\\target\\rls\\debug\\deps\\libwidestring-5b539f746324d8f6.rmeta"},"prelude":{"crate_id":{"name":"widestring","disambiguator":[14713444970465719525,17048477183349528129]},"crate_root":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src","external_crates":[{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9841458385686728621,15575055662541448531]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17919213227389061864,3687462448081315021]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[117649788198974291,9401830764183487500]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16805511066922772367,1475770714066637805]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6932327359549611065,14246427449334719808]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[10224979718716634612,8460908855091801084]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3917603931972316087,6031530912861913142]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1909649518730319250,15976693491490976054]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9858513891483661062,11973857511412016831]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[2302790573754666385,5170192652780636563]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[16882338025965339030,8535442690485361914]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4842953915852994816,3810175436331841417]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14037401367256211658,2835270069367976133]}}],"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":19225,"line_start":1,"line_end":398,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9940,"byte_end":9941,"line_start":190,"line_end":190,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"UCStr, UCString","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9940,"byte_end":9941,"line_start":190,"line_end":190,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"UString, UStr, FromUtf32Error","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":19225,"line_start":1,"line_end":398,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":15},{"krate":0,"index":247},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" A wide string FFI module for converting to and from wide string variants.","sig":null,"attributes":[{"value":"! A wide string FFI module for converting to and from wide string variants.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides multiple types of wide strings: `U16String`, `U16CString`, `U32String`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":82,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! and `U32CString`. These types are backed by two generic implementations parameterized by","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":179,"byte_end":271,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"! element size: `UString<C>` and `UCString<C>`. The `UCString` types are analogous to the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":272,"byte_end":363,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"! standard `CString` FFI type, while the `UString` types are analogous to `OsString`. Otherwise,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":364,"byte_end":462,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"! `U16` and `U32` types differ only in character width and encoding methods.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":463,"byte_end":541,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":542,"byte_end":545,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! For `U16String` and `U32String`, no guarantees are made about the underlying string data; they","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":546,"byte_end":644,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"! are simply a sequence of UTF-16 *code units* or UTF-32 code points, both of which may be","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":645,"byte_end":737,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"! ill-formed or contain nul values. `U16CString` and `U32CString`, on the other hand, are aware","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":738,"byte_end":835,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"! of nul values and are guaranteed to be terminated with a nul value (unless unchecked methods","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":836,"byte_end":932,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"! are used to construct the strings). Because `U16CString` and `U32CString` are C-style,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":933,"byte_end":1023,"line_start":13,"line_end":13,"column_start":1,"column_end":91}},{"value":"! nul-terminated strings, they will have no interior nul values. All four string types may still","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1024,"byte_end":1122,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"! have unpaired UTF-16 surrogates or invalid UTF-32 code points; ill-formed data is preserved","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1123,"byte_end":1218,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"! until conversion to a basic Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1219,"byte_end":1265,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1266,"byte_end":1269,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Use `U16String` or `U32String` when you simply need to pass-through strings, or when you know","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1270,"byte_end":1367,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"! or don't care if you're not dealing with a nul-terminated string, such as when string lengths","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1368,"byte_end":1465,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! are provided and you are only reading strings from FFI, not writing them out to a FFI.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1466,"byte_end":1556,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1557,"byte_end":1560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Use `U16CString` or `U32CString` when you must properly handle nul values, and must deal with","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1561,"byte_end":1658,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"! nul-terminated C-style wide strings, such as when you pass strings into FFI functions.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1659,"byte_end":1749,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1750,"byte_end":1753,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Relationship to other Rust Strings","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1754,"byte_end":1794,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1795,"byte_end":1798,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Standard Rust strings `String` and `str` are well-formed Unicode data encoded as UTF-8. The","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1799,"byte_end":1894,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"! standard strings provide proper handling of Unicode and ensure strong safety guarantees.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1895,"byte_end":1987,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1988,"byte_end":1991,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! `CString` and `CStr` are strings used for C FFI. They handle nul-terminated C-style strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":1992,"byte_end":2088,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"! However, they do not have a builtin encoding, and conversions between C-style and other Rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2089,"byte_end":2185,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"! strings must specifically encode and decode the strings, and handle possibly invalid encoding","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2186,"byte_end":2283,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"! data. They are safe to use only in passing string-like data back and forth from C APIs but do","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2284,"byte_end":2381,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! not provide any other guarantees, so may not be well-formed.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2382,"byte_end":2446,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2447,"byte_end":2450,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! `OsString` and `OsStr` are also strings for use with FFI. Unlike `CString`, they do no special","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2451,"byte_end":2549,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"! handling of nul values, but instead have an OS-specified encoding. While, for example, on Linux","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2550,"byte_end":2649,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"! systems this is usually the UTF-8 encoding, this is not the case for every platform. The","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2650,"byte_end":2742,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"! encoding may not even be 8-bit: on Windows, `OsString` uses a malformed encoding sometimes","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2743,"byte_end":2837,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"! referred to as \"WTF-8\". In any case, like `CString`, `OsString` has no additional guarantees","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2838,"byte_end":2934,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"! and may not be well-formed.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2935,"byte_end":2966,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2967,"byte_end":2970,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! Due to the loss of safety of these other string types, conversion to standard Rust `String` is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":2971,"byte_end":3069,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"! lossy, and may require knowledge of the underlying encoding, including platform-specific","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3070,"byte_end":3162,"line_start":44,"line_end":44,"column_start":1,"column_end":93}},{"value":"! quirks.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3163,"byte_end":3174,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3175,"byte_end":3178,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! The wide strings in this crate are roughly based on the principles of the string types in","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3179,"byte_end":3272,"line_start":47,"line_end":47,"column_start":1,"column_end":94}},{"value":"! `std::ffi`, though there are differences. `U16String`, `U32String`, `U16Str`, and `U32Str` are","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3273,"byte_end":3371,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"! roughly similar in role to `OsString` and `OsStr`, while `U16CString`, `U32CString`, `U16CStr`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3372,"byte_end":3471,"line_start":49,"line_end":49,"column_start":1,"column_end":100}},{"value":"! and `U32CStr` are roughly similar in role to `CString` and `CStr`. Conversion to FFI string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3472,"byte_end":3567,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"! types is generally very straight forward and safe, while conversion directly between standard","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3568,"byte_end":3665,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"! Rust `String` is a lossy conversion just as `OsString` is.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3666,"byte_end":3728,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3729,"byte_end":3732,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! `U16String` and `U16CString` are treated as though they use UTF-16 encoding, even if they may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3733,"byte_end":3830,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"! contain unpaired surrogates. `U32String` and `U32CString` are treated as though they use UTF-32","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3831,"byte_end":3930,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"! encoding, even if they may contain values outside the valid Unicode character range.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":3931,"byte_end":4019,"line_start":56,"line_end":56,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4020,"byte_end":4023,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! # Remarks on UTF-16 Code Units","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4024,"byte_end":4058,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4059,"byte_end":4062,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! *Code units* are the 16-bit units that comprise UTF-16 sequences. Code units","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4063,"byte_end":4143,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"! can specify Unicode code points either as single units or in *surrogate pairs*. Because every","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4144,"byte_end":4241,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"! code unit might be part of a surrogate pair, many regular string operations, including","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4242,"byte_end":4332,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"! indexing into a wide string, writing to a wide string, or even iterating a wide string should","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4333,"byte_end":4430,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"! be handled with care and are greatly discouraged. Some operations have safer alternatives","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4431,"byte_end":4524,"line_start":64,"line_end":64,"column_start":1,"column_end":94}},{"value":"! provided, such as Unicode code point iteration instead of code unit iteration. Always keep in","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4525,"byte_end":4622,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"! mind that the number of code units (`len()`) of a wide string is **not** equivalent to the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4623,"byte_end":4717,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"! number of Unicode characters in the string, merely the length of the UTF-16 encoding sequence.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4718,"byte_end":4816,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"! In fact, Unicode code points do not even have a one-to-one mapping with characters!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4817,"byte_end":4904,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4905,"byte_end":4908,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! UTF-32 simply encodes Unicode code points as-is in 32-bit values, but Unicode character code","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":4909,"byte_end":5005,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"! points are reserved only for 21-bits. Again, Unicode code points do not have a one-to-one","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5006,"byte_end":5099,"line_start":71,"line_end":71,"column_start":1,"column_end":94}},{"value":"! mapping with the concept of a visual character glyph.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5100,"byte_end":5157,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5158,"byte_end":5161,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! # FFI with C/C++ `wchar_t`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5162,"byte_end":5192,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5193,"byte_end":5196,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! C/C++'s `wchar_t` (and C++'s corresponding `widestring`) varies in size depending on compiler","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5197,"byte_end":5294,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"! and platform. Typically, `wchar_t` is 16-bits on Windows and 32-bits on most Unix-based","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5295,"byte_end":5386,"line_start":77,"line_end":77,"column_start":1,"column_end":92}},{"value":"! platforms. For convenience when using `wchar_t`-based FFI's, type aliases for the corresponding","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5387,"byte_end":5486,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"! string types are provided: `WideString` aliases `U16String` on Windows or `U32String`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5487,"byte_end":5576,"line_start":79,"line_end":79,"column_start":1,"column_end":90}},{"value":"! elsewhere, `WideCString` aliases `U16CString` or `U32CString`, etc. The `WideChar` alias","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5577,"byte_end":5669,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"! is also provided, aliasing `u16` or `u32`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5670,"byte_end":5716,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5717,"byte_end":5720,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! When not interacting with a FFI using `wchar_t`, it is recommended to use the string types","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5721,"byte_end":5815,"line_start":83,"line_end":83,"column_start":1,"column_end":95}},{"value":"! directly rather than via the wide alias.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5816,"byte_end":5860,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5861,"byte_end":5864,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5865,"byte_end":5879,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5880,"byte_end":5883,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! The following example uses `U16String` to get Windows error messages, since `FormatMessageW`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5884,"byte_end":5980,"line_start":88,"line_end":88,"column_start":1,"column_end":97}},{"value":"! returns a string length for us and we don't need to pass error messages into other FFI","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":5981,"byte_end":6071,"line_start":89,"line_end":89,"column_start":1,"column_end":91}},{"value":"! functions so we don't need to worry about nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6072,"byte_end":6129,"line_start":90,"line_end":90,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6130,"byte_end":6133,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6134,"byte_end":6145,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"! # #[cfg(not(windows))]","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6146,"byte_end":6172,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"! # fn main() {}","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6173,"byte_end":6191,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"! # extern crate winapi;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6192,"byte_end":6218,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"! # extern crate widestring;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6219,"byte_end":6249,"line_start":96,"line_end":96,"column_start":1,"column_end":31}},{"value":"! # #[cfg(windows)]","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6250,"byte_end":6271,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"! # fn main() {","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6272,"byte_end":6289,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"! use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6290,"byte_end":6374,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"!                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6375,"byte_end":6468,"line_start":100,"line_end":100,"column_start":1,"column_end":94}},{"value":"! use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6469,"byte_end":6507,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"! use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6508,"byte_end":6550,"line_start":102,"line_end":102,"column_start":1,"column_end":43}},{"value":"! use std::ptr;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6551,"byte_end":6568,"line_start":103,"line_end":103,"column_start":1,"column_end":18}},{"value":"! use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6569,"byte_end":6599,"line_start":104,"line_end":104,"column_start":1,"column_end":31}},{"value":"! # use winapi::shared::minwindef::DWORD;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6600,"byte_end":6643,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"! # let error_code: DWORD = 0;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6644,"byte_end":6676,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6677,"byte_end":6680,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! let U16Str: U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6681,"byte_end":6707,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"! unsafe {","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6708,"byte_end":6720,"line_start":109,"line_end":109,"column_start":1,"column_end":13}},{"value":"!     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6721,"byte_end":6806,"line_start":110,"line_end":110,"column_start":1,"column_end":86}},{"value":"!     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6807,"byte_end":6856,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"!     let strlen = FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6857,"byte_end":6921,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"!                                 FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6922,"byte_end":6990,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"!                                 FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":6991,"byte_end":7057,"line_start":114,"line_end":114,"column_start":1,"column_end":67}},{"value":"!                                 ptr::null(),","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7058,"byte_end":7106,"line_start":115,"line_end":115,"column_start":1,"column_end":49}},{"value":"!                                 error_code, // error code from GetLastError()","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7107,"byte_end":7188,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"!                                 0,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7189,"byte_end":7227,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"!                                 (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7228,"byte_end":7303,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"!                                 0,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7304,"byte_end":7342,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!                                 ptr::null_mut());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7343,"byte_end":7396,"line_start":120,"line_end":120,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7397,"byte_end":7400,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"!     // Get the buffer as a wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7401,"byte_end":7443,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"!     U16Str = U16String::from_ptr(buffer, strlen as usize);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7444,"byte_end":7506,"line_start":123,"line_end":123,"column_start":1,"column_end":63}},{"value":"!     // Since U16String creates an owned copy, it's safe to free original buffer now","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7507,"byte_end":7594,"line_start":124,"line_end":124,"column_start":1,"column_end":88}},{"value":"!     // If you didn't want an owned copy, you could use &U16Str.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7595,"byte_end":7662,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"!     LocalFree(buffer as HLOCAL);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7663,"byte_end":7699,"line_start":126,"line_end":126,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7700,"byte_end":7705,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"! // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7706,"byte_end":7780,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"! let message = U16Str.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7781,"byte_end":7824,"line_start":129,"line_end":129,"column_start":1,"column_end":44}},{"value":"! # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7825,"byte_end":7896,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"! # }","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7897,"byte_end":7904,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7905,"byte_end":7912,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7913,"byte_end":7916,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! The following example is the functionally the same, only using `U16CString` instead.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":7917,"byte_end":8005,"line_start":134,"line_end":134,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8006,"byte_end":8009,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8010,"byte_end":8021,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"! # #[cfg(not(windows))]","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8022,"byte_end":8048,"line_start":137,"line_end":137,"column_start":1,"column_end":27}},{"value":"! # fn main() {}","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8049,"byte_end":8067,"line_start":138,"line_end":138,"column_start":1,"column_end":19}},{"value":"! # extern crate winapi;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8068,"byte_end":8094,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"! # extern crate widestring;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8095,"byte_end":8125,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"! # #[cfg(windows)]","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8126,"byte_end":8147,"line_start":141,"line_end":141,"column_start":1,"column_end":22}},{"value":"! # fn main() {","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8148,"byte_end":8165,"line_start":142,"line_end":142,"column_start":1,"column_end":18}},{"value":"! use winapi::um::winbase::{FormatMessageW, LocalFree, FORMAT_MESSAGE_FROM_SYSTEM,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8166,"byte_end":8250,"line_start":143,"line_end":143,"column_start":1,"column_end":85}},{"value":"!                           FORMAT_MESSAGE_ALLOCATE_BUFFER, FORMAT_MESSAGE_IGNORE_INSERTS};","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8251,"byte_end":8344,"line_start":144,"line_end":144,"column_start":1,"column_end":94}},{"value":"! use winapi::shared::ntdef::LPWSTR;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8345,"byte_end":8383,"line_start":145,"line_end":145,"column_start":1,"column_end":39}},{"value":"! use winapi::shared::minwindef::HLOCAL;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8384,"byte_end":8426,"line_start":146,"line_end":146,"column_start":1,"column_end":43}},{"value":"! use std::ptr;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8427,"byte_end":8444,"line_start":147,"line_end":147,"column_start":1,"column_end":18}},{"value":"! use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8445,"byte_end":8476,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use winapi::shared::minwindef::DWORD;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8477,"byte_end":8520,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"! # let error_code: DWORD = 0;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8521,"byte_end":8553,"line_start":150,"line_end":150,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8554,"byte_end":8557,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! let U16Str: U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8558,"byte_end":8585,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"! unsafe {","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8586,"byte_end":8598,"line_start":153,"line_end":153,"column_start":1,"column_end":13}},{"value":"!     // First, get a string buffer from some windows api such as FormatMessageW...","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8599,"byte_end":8684,"line_start":154,"line_end":154,"column_start":1,"column_end":86}},{"value":"!     let mut buffer: LPWSTR = ptr::null_mut();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8685,"byte_end":8734,"line_start":155,"line_end":155,"column_start":1,"column_end":50}},{"value":"!     FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8735,"byte_end":8786,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"!                    FORMAT_MESSAGE_ALLOCATE_BUFFER |","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8787,"byte_end":8842,"line_start":157,"line_end":157,"column_start":1,"column_end":56}},{"value":"!                    FORMAT_MESSAGE_IGNORE_INSERTS,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8843,"byte_end":8896,"line_start":158,"line_end":158,"column_start":1,"column_end":54}},{"value":"!                    ptr::null(),","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8897,"byte_end":8932,"line_start":159,"line_end":159,"column_start":1,"column_end":36}},{"value":"!                    error_code, // error code from GetLastError()","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":8933,"byte_end":9001,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"!                    0,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9002,"byte_end":9027,"line_start":161,"line_end":161,"column_start":1,"column_end":26}},{"value":"!                    (&mut buffer as *mut LPWSTR) as LPWSTR,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9028,"byte_end":9090,"line_start":162,"line_end":162,"column_start":1,"column_end":63}},{"value":"!                    0,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9091,"byte_end":9116,"line_start":163,"line_end":163,"column_start":1,"column_end":26}},{"value":"!                    ptr::null_mut());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9117,"byte_end":9157,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9158,"byte_end":9161,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"!     // Get the buffer as a wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9162,"byte_end":9204,"line_start":166,"line_end":166,"column_start":1,"column_end":43}},{"value":"!     U16Str = U16CString::from_ptr_str(buffer);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9205,"byte_end":9255,"line_start":167,"line_end":167,"column_start":1,"column_end":51}},{"value":"!     // Since U16CString creates an owned copy, it's safe to free original buffer now","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9256,"byte_end":9344,"line_start":168,"line_end":168,"column_start":1,"column_end":89}},{"value":"!     // If you didn't want an owned copy, you could use &U16CStr.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9345,"byte_end":9413,"line_start":169,"line_end":169,"column_start":1,"column_end":69}},{"value":"!     LocalFree(buffer as HLOCAL);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9414,"byte_end":9450,"line_start":170,"line_end":170,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9451,"byte_end":9456,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! // Convert to a regular Rust String and use it to your heart's desire!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9457,"byte_end":9531,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"! let message = U16Str.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9532,"byte_end":9575,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"! # assert_eq!(message, \"The operation completed successfully.\\r\\n\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9576,"byte_end":9647,"line_start":174,"line_end":174,"column_start":1,"column_end":72}},{"value":"! # }","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9648,"byte_end":9655,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9656,"byte_end":9663,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"deny(future_incompatible)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9665,"byte_end":9694,"line_start":178,"line_end":178,"column_start":1,"column_end":30}},{"value":"warn(unused, anonymous_parameters, missing_docs,\n       missing_copy_implementations, missing_debug_implementations,\n       trivial_casts, trivial_numeric_casts)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9695,"byte_end":9856,"line_start":179,"line_end":182,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21409,"byte_end":21417,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"UCString","qualname":"::ucstring::UCString","value":"UCString {  }","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":19788,"byte_end":19877,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":19878,"byte_end":19881,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `UCString` is aware of nul values. Unless unchecked conversions are used, all `UCString`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":19882,"byte_end":19974,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":19975,"byte_end":20073,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20074,"byte_end":20170,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20171,"byte_end":20265,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20266,"byte_end":20278,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20279,"byte_end":20282,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `UCString` can be converted to and from many other string types, including `UString`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20283,"byte_end":20372,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20373,"byte_end":20443,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20444,"byte_end":20447,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16CString` or `U32CString` or `WideCString` to using","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20448,"byte_end":20543,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ this type directly.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20544,"byte_end":20567,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20568,"byte_end":20571,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20572,"byte_end":20586,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20587,"byte_end":20590,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20591,"byte_end":20687,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20688,"byte_end":20714,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20715,"byte_end":20718,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20719,"byte_end":20730,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20731,"byte_end":20762,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20763,"byte_end":20782,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20783,"byte_end":20831,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20832,"byte_end":20880,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20881,"byte_end":20917,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20918,"byte_end":20960,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20961,"byte_end":20994,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":20995,"byte_end":21002,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21003,"byte_end":21006,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The same example using `U32CString`:","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21007,"byte_end":21047,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21048,"byte_end":21051,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21052,"byte_end":21063,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21064,"byte_end":21095,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21096,"byte_end":21115,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21116,"byte_end":21164,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21165,"byte_end":21213,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21214,"byte_end":21250,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21251,"byte_end":21293,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21294,"byte_end":21327,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21328,"byte_end":21335,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22242,"byte_end":22247,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"UCStr","qualname":"::ucstring::UCStr","value":"UCStr {  }","parent":null,"children":[{"krate":0,"index":490}],"decl_id":null,"docs":" C-style wide string reference for `UCString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `UCString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21454,"byte_end":21503,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21504,"byte_end":21507,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ `UCStr` is aware of nul values. Unless unchecked conversions are used, all `UCStr`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21508,"byte_end":21594,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21595,"byte_end":21693,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 or UTF-32 data. These strings are","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21694,"byte_end":21790,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ intended to be used with FFI functions such as Windows API that may require nul-terminated","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21791,"byte_end":21885,"line_start":57,"line_end":57,"column_start":1,"column_end":95}},{"value":"/ strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21886,"byte_end":21898,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21899,"byte_end":21902,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ `UCStr` can be converted to and from many other string types, including `UString`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21903,"byte_end":21989,"line_start":60,"line_end":60,"column_start":1,"column_end":87}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":21990,"byte_end":22060,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22061,"byte_end":22064,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16CStr` or `U32CStr` or `WideCStr` to using","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22065,"byte_end":22151,"line_start":63,"line_end":63,"column_start":1,"column_end":87}},{"value":"/ this type directly.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22152,"byte_end":22175,"line_start":64,"line_end":64,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22564,"byte_end":22572,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"NulError","qualname":"::ucstring::NulError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from `UCString` to indicate that an invalid nul value was found.","sig":null,"attributes":[{"value":"/ An error returned from `UCString` to indicate that an invalid nul value was found.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22279,"byte_end":22365,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22366,"byte_end":22369,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The error indicates the position in the vector where the nul value was found, as well as","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22370,"byte_end":22462,"line_start":72,"line_end":72,"column_start":1,"column_end":93}},{"value":"/ returning the ownership of the invalid vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22463,"byte_end":22513,"line_start":73,"line_end":73,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22860,"byte_end":22875,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"MissingNulError","qualname":"::ucstring::MissingNulError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from `UCString` and `UCStr` to indicate that a terminating nul value\n was missing.","sig":null,"attributes":[{"value":"/ An error returned from `UCString` and `UCStr` to indicate that a terminating nul value","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22600,"byte_end":22690,"line_start":77,"line_end":77,"column_start":1,"column_end":91}},{"value":"/ was missing.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22691,"byte_end":22707,"line_start":78,"line_end":78,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22708,"byte_end":22711,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The error optionally returns the ownership of the invalid vector whenever a vector was owned.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22712,"byte_end":22809,"line_start":80,"line_end":80,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24759,"byte_end":24762,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<UCString<C>>::new","value":"fn (v: impl Into<Vec<C>>) -> Result<Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from a container of wide character data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22930,"byte_end":22998,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23003,"byte_end":23006,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23011,"byte_end":23104,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23109,"byte_end":23173,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23178,"byte_end":23181,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23186,"byte_end":23200,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23205,"byte_end":23208,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23213,"byte_end":23285,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain the `Vec` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23290,"byte_end":23377,"line_start":93,"line_end":93,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23382,"byte_end":23385,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23390,"byte_end":23404,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23409,"byte_end":23412,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23417,"byte_end":23428,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23433,"byte_end":23464,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23469,"byte_end":23524,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23529,"byte_end":23558,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23563,"byte_end":23606,"line_start":101,"line_end":101,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::new(v).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23611,"byte_end":23655,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23660,"byte_end":23703,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23708,"byte_end":23715,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23720,"byte_end":23723,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23728,"byte_end":23739,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23744,"byte_end":23775,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23780,"byte_end":23835,"line_start":108,"line_end":108,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23840,"byte_end":23869,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23874,"byte_end":23917,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::new(v).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23922,"byte_end":23966,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":23971,"byte_end":24014,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24019,"byte_end":24026,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24031,"byte_end":24034,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24039,"byte_end":24113,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24118,"byte_end":24121,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24126,"byte_end":24137,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24142,"byte_end":24173,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 0u16, 104u16, 101u16]; // 'T' NUL 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24178,"byte_end":24243,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24248,"byte_end":24291,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::new(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24296,"byte_end":24329,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24334,"byte_end":24360,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24365,"byte_end":24418,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24423,"byte_end":24430,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24435,"byte_end":24438,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24443,"byte_end":24454,"line_start":126,"line_end":126,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24459,"byte_end":24490,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 0u32, 104u32, 101u32]; // 'T' NUL 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24495,"byte_end":24560,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24565,"byte_end":24608,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::new(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24613,"byte_end":24646,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24651,"byte_end":24677,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24682,"byte_end":24735,"line_start":132,"line_end":132,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":24740,"byte_end":24747,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26891,"byte_end":26908,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"from_vec_with_nul","qualname":"<UCString<C>>::from_vec_with_nul","value":"fn (v: impl Into<Vec<C>>) -> Result<Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from a nul-terminated container of UTF-16 or UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from a nul-terminated container of UTF-16 or UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25069,"byte_end":25154,"line_start":143,"line_end":143,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25159,"byte_end":25162,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25167,"byte_end":25260,"line_start":145,"line_end":145,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25265,"byte_end":25347,"line_start":146,"line_end":146,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25352,"byte_end":25355,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25360,"byte_end":25374,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25379,"byte_end":25382,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25387,"byte_end":25477,"line_start":150,"line_end":150,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25482,"byte_end":25545,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25550,"byte_end":25553,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25558,"byte_end":25572,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25577,"byte_end":25580,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25585,"byte_end":25596,"line_start":155,"line_end":155,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25601,"byte_end":25632,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16, 0u16]; // 'T' 'h' 'e' NUL","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25637,"byte_end":25702,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25707,"byte_end":25744,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25749,"byte_end":25792,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_vec_with_nul(v).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25797,"byte_end":25855,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25860,"byte_end":25903,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25908,"byte_end":25915,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25920,"byte_end":25923,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25928,"byte_end":25939,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25944,"byte_end":25975,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32, 0u32]; // 'T' 'h' 'e' NUL","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":25980,"byte_end":26045,"line_start":166,"line_end":166,"column_start":5,"column_end":70}},{"value":"/ # let cloned = v[..3].to_owned();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26050,"byte_end":26087,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26092,"byte_end":26135,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_vec_with_nul(v).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26140,"byte_end":26198,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26203,"byte_end":26246,"line_start":170,"line_end":170,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26251,"byte_end":26258,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26263,"byte_end":26266,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26271,"byte_end":26353,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26358,"byte_end":26361,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26366,"byte_end":26377,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26382,"byte_end":26413,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26418,"byte_end":26473,"line_start":177,"line_end":177,"column_start":5,"column_end":60}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26478,"byte_end":26521,"line_start":178,"line_end":178,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_vec_with_nul(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26526,"byte_end":26573,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26578,"byte_end":26604,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26609,"byte_end":26616,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26621,"byte_end":26624,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26629,"byte_end":26640,"line_start":183,"line_end":183,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26645,"byte_end":26676,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26681,"byte_end":26736,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26741,"byte_end":26784,"line_start":186,"line_end":186,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_vec_with_nul(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26789,"byte_end":26836,"line_start":187,"line_end":187,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26841,"byte_end":26867,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":26872,"byte_end":26879,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27769,"byte_end":27787,"line_start":212,"line_end":212,"column_start":19,"column_end":37},"name":"from_vec_unchecked","qualname":"<UCString<C>>::from_vec_unchecked","value":"fn (v: impl Into<Vec<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UCString` from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Creates a `UCString` from a vector without checking for interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27311,"byte_end":27391,"line_start":202,"line_end":202,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27396,"byte_end":27399,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27404,"byte_end":27498,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27503,"byte_end":27511,"line_start":205,"line_end":205,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27516,"byte_end":27519,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27524,"byte_end":27536,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27541,"byte_end":27544,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `new` except that no runtime assertion is made that `v`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27549,"byte_end":27637,"line_start":209,"line_end":209,"column_start":5,"column_end":93}},{"value":"/ contains no nul values. Providing a vector with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27642,"byte_end":27730,"line_start":210,"line_end":210,"column_start":5,"column_end":93}},{"value":"/ `UCString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":27735,"byte_end":27750,"line_start":211,"line_end":211,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28509,"byte_end":28536,"line_start":230,"line_end":230,"column_start":19,"column_end":46},"name":"from_vec_with_nul_unchecked","qualname":"<UCString<C>>::from_vec_with_nul_unchecked","value":"fn (v: impl Into<Vec<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UCString` from a vector that should have a nul terminator, without checking\n for any nul values.","sig":null,"attributes":[{"value":"/ Creates a `UCString` from a vector that should have a nul terminator, without checking","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28075,"byte_end":28165,"line_start":222,"line_end":222,"column_start":5,"column_end":95}},{"value":"/ for any nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28170,"byte_end":28193,"line_start":223,"line_end":223,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28198,"byte_end":28201,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28206,"byte_end":28218,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28223,"byte_end":28226,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_vec_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28231,"byte_end":28324,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ that `v` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28329,"byte_end":28422,"line_start":228,"line_end":228,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `UCString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28427,"byte_end":28490,"line_start":229,"line_end":229,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29014,"byte_end":29023,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"from_ustr","qualname":"<UCString<C>>::from_ustr","value":"fn (s: impl AsRef<UStr<C>>) -> Result<Self, NulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr`.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28657,"byte_end":28733,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28738,"byte_end":28741,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28746,"byte_end":28800,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28805,"byte_end":28808,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28813,"byte_end":28827,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28832,"byte_end":28835,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28840,"byte_end":28912,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":28917,"byte_end":29002,"line_start":243,"line_end":243,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29527,"byte_end":29546,"line_start":256,"line_end":256,"column_start":19,"column_end":38},"name":"from_ustr_unchecked","qualname":"<UCString<C>>::from_ustr_unchecked","value":"fn (s: impl AsRef<UStr<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr`, without\n scanning for invalid nul values.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr`, without","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29135,"byte_end":29219,"line_start":248,"line_end":248,"column_start":5,"column_end":89}},{"value":"/ scanning for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29224,"byte_end":29260,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29265,"byte_end":29268,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29273,"byte_end":29285,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29290,"byte_end":29293,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_u16_str` except that no runtime assertion is made that","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29298,"byte_end":29391,"line_start":253,"line_end":253,"column_start":5,"column_end":98}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29396,"byte_end":29488,"line_start":254,"line_end":254,"column_start":5,"column_end":97}},{"value":"/ `UCString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29493,"byte_end":29508,"line_start":255,"line_end":255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30051,"byte_end":30069,"line_start":269,"line_end":269,"column_start":12,"column_end":30},"name":"from_ustr_with_nul","qualname":"<UCString<C>>::from_ustr_with_nul","value":"fn (s: impl AsRef<UStr<C>>) -> Result<Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr` with a nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29652,"byte_end":29738,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29743,"byte_end":29758,"line_start":261,"line_end":261,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29763,"byte_end":29766,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29771,"byte_end":29841,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29846,"byte_end":29849,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29854,"byte_end":29868,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29873,"byte_end":29876,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29881,"byte_end":29971,"line_start":267,"line_end":267,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":29976,"byte_end":30039,"line_start":268,"line_end":268,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30693,"byte_end":30721,"line_start":281,"line_end":281,"column_start":19,"column_end":47},"name":"from_ustr_with_nul_unchecked","qualname":"<UCString<C>>::from_ustr_with_nul_unchecked","value":"fn (s: impl AsRef<UStr<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCString` from anything that can be converted to a `UStr` with a nul\n terminator, without checking the string for any invalid interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `UCString` from anything that can be converted to a `UStr` with a nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30202,"byte_end":30288,"line_start":273,"line_end":273,"column_start":5,"column_end":91}},{"value":"/ terminator, without checking the string for any invalid interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30293,"byte_end":30373,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30378,"byte_end":30381,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30386,"byte_end":30398,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30403,"byte_end":30406,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_u16_str_with_nul` except that no runtime assertion is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30411,"byte_end":30503,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30508,"byte_end":30596,"line_start":279,"line_end":279,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `UCString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30601,"byte_end":30674,"line_start":280,"line_end":280,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31829,"byte_end":31841,"line_start":307,"line_end":307,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCString<C>>::from_ptr_str","value":"fn (p: *const C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `UCString` copied from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a new `UCString` copied from a nul-terminated string pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30836,"byte_end":30912,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30917,"byte_end":30920,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":30925,"byte_end":31018,"line_start":287,"line_end":287,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31023,"byte_end":31117,"line_start":288,"line_end":288,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31122,"byte_end":31125,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31130,"byte_end":31142,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31147,"byte_end":31150,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31155,"byte_end":31248,"line_start":292,"line_end":292,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31253,"byte_end":31328,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31333,"byte_end":31336,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31341,"byte_end":31366,"line_start":295,"line_end":295,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31371,"byte_end":31374,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31379,"byte_end":31391,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31396,"byte_end":31399,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31404,"byte_end":31444,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31449,"byte_end":31452,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31457,"byte_end":31469,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31474,"byte_end":31477,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31482,"byte_end":31572,"line_start":303,"line_end":303,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31577,"byte_end":31667,"line_start":304,"line_end":304,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31672,"byte_end":31767,"line_start":305,"line_end":305,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":31772,"byte_end":31810,"line_start":306,"line_end":306,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32181,"byte_end":32189,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"as_ucstr","qualname":"<UCString<C>>::as_ucstr","value":"fn (&self) -> &UCStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a `UCStr` reference.\n","sig":null,"attributes":[{"value":"/ Converts to a `UCStr` reference.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32133,"byte_end":32169,"line_start":317,"line_end":317,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32482,"byte_end":32490,"line_start":327,"line_end":327,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UCString<C>>::into_vec","value":"fn (self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec` without a nul terminator, consuming the string in\n the process.","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec` without a nul terminator, consuming the string in","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32236,"byte_end":32327,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/ the process.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32332,"byte_end":32348,"line_start":323,"line_end":323,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32353,"byte_end":32356,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will **not** contain a nul-terminator, and will contain no other nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32361,"byte_end":32454,"line_start":325,"line_end":325,"column_start":5,"column_end":98}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32459,"byte_end":32470,"line_start":326,"line_end":326,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32783,"byte_end":32800,"line_start":336,"line_end":336,"column_start":12,"column_end":29},"name":"into_vec_with_nul","qualname":"<UCString<C>>::into_vec_with_nul","value":"fn (self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec`, consuming the string in the process.","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec`, consuming the string in the process.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32597,"byte_end":32676,"line_start":333,"line_end":333,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32681,"byte_end":32684,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The resulting vector will contain a nul-terminator and no interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32689,"byte_end":32771,"line_start":335,"line_end":335,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33257,"byte_end":33265,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<UCString<C>>::into_raw","value":"fn (self) -> *mut C","parent":null,"children":[],"decl_id":null,"docs":" Transfers ownership of the wide string to a C caller.","sig":null,"attributes":[{"value":"/ Transfers ownership of the wide string to a C caller.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32867,"byte_end":32924,"line_start":340,"line_end":340,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32929,"byte_end":32932,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32937,"byte_end":32949,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32954,"byte_end":32957,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The pointer must be returned to Rust and reconstituted using `from_raw` to be properly","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":32962,"byte_end":33052,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/ deallocated. Specifically, one should _not_ use the standard C `free` function to","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33057,"byte_end":33142,"line_start":345,"line_end":345,"column_start":5,"column_end":90}},{"value":"/ deallocate this string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33147,"byte_end":33174,"line_start":346,"line_end":346,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33179,"byte_end":33182,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Failure to call `from_raw` will lead to a memory leak.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33187,"byte_end":33245,"line_start":348,"line_end":348,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33676,"byte_end":33684,"line_start":360,"line_end":360,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<UCString<C>>::from_raw","value":"fn (p: *mut C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retakes ownership of a `UCString` that was transferred to C.","sig":null,"attributes":[{"value":"/ Retakes ownership of a `UCString` that was transferred to C.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33346,"byte_end":33410,"line_start":353,"line_end":353,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33415,"byte_end":33418,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33423,"byte_end":33435,"line_start":355,"line_end":355,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33440,"byte_end":33443,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This should only ever be called with a pointer that was earlier obtained by calling","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33448,"byte_end":33535,"line_start":357,"line_end":357,"column_start":5,"column_end":92}},{"value":"/ `into_raw` on a `UCString`. Additionally, the length of the string will be recalculated","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33540,"byte_end":33631,"line_start":358,"line_end":358,"column_start":5,"column_end":96}},{"value":"/ from the pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33636,"byte_end":33657,"line_start":359,"line_end":359,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34774,"byte_end":34790,"line_start":395,"line_end":395,"column_start":12,"column_end":28},"name":"into_boxed_ucstr","qualname":"<UCString<C>>::into_boxed_ucstr","value":"fn (self) -> Box<UCStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `UCString` into a boxed `UCStr`.","sig":null,"attributes":[{"value":"/ Converts this `UCString` into a boxed `UCStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":33993,"byte_end":34043,"line_start":372,"line_end":372,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34048,"byte_end":34051,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34056,"byte_end":34070,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34075,"byte_end":34078,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34083,"byte_end":34090,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16CString, U16CStr};","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34095,"byte_end":34137,"line_start":377,"line_end":377,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34142,"byte_end":34145,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34150,"byte_end":34204,"line_start":379,"line_end":379,"column_start":5,"column_end":59}},{"value":"/ let c_string = U16CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34209,"byte_end":34264,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34269,"byte_end":34313,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34318,"byte_end":34332,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U16CStr::from_slice_with_nul(&v).unwrap());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34337,"byte_end":34404,"line_start":383,"line_end":383,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34409,"byte_end":34416,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34421,"byte_end":34424,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34429,"byte_end":34436,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32CString, U32CStr};","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34441,"byte_end":34483,"line_start":387,"line_end":387,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34488,"byte_end":34491,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34496,"byte_end":34550,"line_start":389,"line_end":389,"column_start":5,"column_end":59}},{"value":"/ let c_string = U32CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34555,"byte_end":34610,"line_start":390,"line_end":390,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34615,"byte_end":34659,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/ v.push(0);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34664,"byte_end":34678,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(&*boxed, U32CStr::from_slice_with_nul(&v).unwrap());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34683,"byte_end":34750,"line_start":393,"line_end":393,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":34755,"byte_end":34762,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36220,"byte_end":36228,"line_start":441,"line_end":441,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u16>>::from_str","value":"fn (s: impl AsRef<str>) -> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str`.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35240,"byte_end":35283,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35288,"byte_end":35291,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35296,"byte_end":35350,"line_start":414,"line_end":414,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35355,"byte_end":35358,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35363,"byte_end":35377,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35382,"byte_end":35385,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35390,"byte_end":35462,"line_start":418,"line_end":418,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35467,"byte_end":35557,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35562,"byte_end":35565,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35570,"byte_end":35584,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35589,"byte_end":35592,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35597,"byte_end":35608,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35613,"byte_end":35644,"line_start":424,"line_end":424,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35649,"byte_end":35672,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35677,"byte_end":35720,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35725,"byte_end":35774,"line_start":427,"line_end":427,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35779,"byte_end":35824,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35829,"byte_end":35836,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35841,"byte_end":35844,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35849,"byte_end":35923,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35928,"byte_end":35931,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35936,"byte_end":35947,"line_start":433,"line_end":433,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35952,"byte_end":35983,"line_start":434,"line_end":434,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35988,"byte_end":36016,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36021,"byte_end":36064,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36069,"byte_end":36107,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36112,"byte_end":36138,"line_start":438,"line_end":438,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36143,"byte_end":36196,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36201,"byte_end":36208,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37022,"byte_end":37040,"line_start":463,"line_end":463,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u16>>::from_str_unchecked","value":"fn (s: impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str`, without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str`, without checking for interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36381,"byte_end":36466,"line_start":446,"line_end":446,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36471,"byte_end":36474,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36479,"byte_end":36491,"line_start":448,"line_end":448,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36496,"byte_end":36499,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str` except that no runtime assertion is made that `s`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36504,"byte_end":36597,"line_start":450,"line_end":450,"column_start":5,"column_end":98}},{"value":"/ contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36602,"byte_end":36690,"line_start":451,"line_end":451,"column_start":5,"column_end":93}},{"value":"/ `U16CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36695,"byte_end":36712,"line_start":452,"line_end":452,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36717,"byte_end":36720,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36725,"byte_end":36739,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36744,"byte_end":36747,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36752,"byte_end":36763,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36768,"byte_end":36799,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36804,"byte_end":36827,"line_start":458,"line_end":458,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36832,"byte_end":36875,"line_start":459,"line_end":459,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36880,"byte_end":36941,"line_start":460,"line_end":460,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36946,"byte_end":36991,"line_start":461,"line_end":461,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":36996,"byte_end":37003,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38168,"byte_end":38185,"line_start":496,"line_end":496,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u16>>::from_str_with_nul","value":"fn (s: impl AsRef<str>) -> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from a `str` with a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from a `str` with a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37185,"byte_end":37250,"line_start":468,"line_end":468,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37255,"byte_end":37258,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37263,"byte_end":37333,"line_start":470,"line_end":470,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37338,"byte_end":37341,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37346,"byte_end":37360,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37365,"byte_end":37368,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37373,"byte_end":37463,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37468,"byte_end":37536,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37541,"byte_end":37544,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37549,"byte_end":37563,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37568,"byte_end":37571,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37576,"byte_end":37587,"line_start":479,"line_end":479,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37592,"byte_end":37623,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37628,"byte_end":37656,"line_start":481,"line_end":481,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37661,"byte_end":37704,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37709,"byte_end":37767,"line_start":483,"line_end":483,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37772,"byte_end":37818,"line_start":484,"line_end":484,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37823,"byte_end":37830,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37835,"byte_end":37838,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37843,"byte_end":37925,"line_start":487,"line_end":487,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37930,"byte_end":37933,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37938,"byte_end":37949,"line_start":489,"line_end":489,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37954,"byte_end":37985,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":37990,"byte_end":38013,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38018,"byte_end":38061,"line_start":492,"line_end":492,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_str_with_nul(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38066,"byte_end":38113,"line_start":493,"line_end":493,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38118,"byte_end":38144,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38149,"byte_end":38156,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39120,"byte_end":39147,"line_start":519,"line_end":519,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_str_with_nul_unchecked","value":"fn (s: impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from str `str` that should have a terminating nul, but without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from str `str` that should have a terminating nul, but without","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38359,"byte_end":38451,"line_start":501,"line_end":501,"column_start":5,"column_end":97}},{"value":"/ checking for any nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38456,"byte_end":38488,"line_start":502,"line_end":502,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38493,"byte_end":38496,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38501,"byte_end":38513,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38518,"byte_end":38521,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38526,"byte_end":38619,"line_start":506,"line_end":506,"column_start":5,"column_end":98}},{"value":"/ that `s` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38624,"byte_end":38717,"line_start":507,"line_end":507,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U16CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38722,"byte_end":38787,"line_start":508,"line_end":508,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38792,"byte_end":38795,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38800,"byte_end":38814,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38819,"byte_end":38822,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38827,"byte_end":38838,"line_start":512,"line_end":512,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38843,"byte_end":38874,"line_start":513,"line_end":513,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38879,"byte_end":38908,"line_start":514,"line_end":514,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38913,"byte_end":38956,"line_start":515,"line_end":515,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":38961,"byte_end":39031,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39036,"byte_end":39089,"line_start":517,"line_end":517,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39094,"byte_end":39101,"line_start":518,"line_end":518,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40018,"byte_end":40026,"line_start":543,"line_end":543,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<u16>>::from_ptr","value":"fn (p: *const u16, len: usize) -> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16CString` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16CString` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39301,"byte_end":39376,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39381,"byte_end":39384,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39389,"byte_end":39473,"line_start":526,"line_end":526,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39478,"byte_end":39481,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39486,"byte_end":39540,"line_start":528,"line_end":528,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39545,"byte_end":39548,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39553,"byte_end":39567,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39572,"byte_end":39575,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39580,"byte_end":39652,"line_start":532,"line_end":532,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39657,"byte_end":39747,"line_start":533,"line_end":533,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39752,"byte_end":39755,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39760,"byte_end":39772,"line_start":535,"line_end":535,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39777,"byte_end":39780,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39785,"byte_end":39879,"line_start":537,"line_end":537,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39884,"byte_end":39897,"line_start":538,"line_end":538,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39902,"byte_end":39905,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39910,"byte_end":39922,"line_start":540,"line_end":540,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39927,"byte_end":39930,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":39935,"byte_end":39999,"line_start":542,"line_end":542,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40965,"byte_end":40983,"line_start":567,"line_end":567,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<u16>>::from_ptr_unchecked","value":"fn (p: *const u16, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16CString` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16CString` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40290,"byte_end":40365,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40370,"byte_end":40373,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40378,"byte_end":40462,"line_start":554,"line_end":554,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40467,"byte_end":40470,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40475,"byte_end":40537,"line_start":556,"line_end":556,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40542,"byte_end":40545,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40550,"byte_end":40562,"line_start":558,"line_end":558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40567,"byte_end":40570,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40575,"byte_end":40669,"line_start":560,"line_end":560,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40674,"byte_end":40768,"line_start":561,"line_end":561,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U16CString` will be invalid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40773,"byte_end":40844,"line_start":562,"line_end":562,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40849,"byte_end":40852,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40857,"byte_end":40869,"line_start":564,"line_end":564,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40874,"byte_end":40877,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":40882,"byte_end":40946,"line_start":566,"line_end":566,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41963,"byte_end":41980,"line_start":595,"line_end":595,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<u16>>::from_ptr_with_nul","value":"fn (p: *const u16, len: usize) -> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16String` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16String` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41235,"byte_end":41309,"line_start":576,"line_end":576,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41314,"byte_end":41317,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41322,"byte_end":41406,"line_start":578,"line_end":578,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41411,"byte_end":41414,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41419,"byte_end":41489,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41494,"byte_end":41497,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41502,"byte_end":41516,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41521,"byte_end":41524,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41529,"byte_end":41619,"line_start":584,"line_end":584,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41624,"byte_end":41692,"line_start":585,"line_end":585,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41697,"byte_end":41700,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41705,"byte_end":41717,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41722,"byte_end":41725,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41730,"byte_end":41824,"line_start":589,"line_end":589,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41829,"byte_end":41842,"line_start":590,"line_end":590,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41847,"byte_end":41850,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41855,"byte_end":41867,"line_start":592,"line_end":592,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41872,"byte_end":41875,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":41880,"byte_end":41944,"line_start":594,"line_end":594,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43135,"byte_end":43162,"line_start":624,"line_end":624,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<u16>>::from_ptr_with_nul_unchecked","value":"fn (p: *const u16, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U16String` copied from a `u16` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U16String` copied from a `u16` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42288,"byte_end":42362,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42367,"byte_end":42370,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u16` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42375,"byte_end":42459,"line_start":609,"line_end":609,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42464,"byte_end":42467,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42472,"byte_end":42562,"line_start":611,"line_end":611,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42567,"byte_end":42656,"line_start":612,"line_end":612,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42661,"byte_end":42664,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42669,"byte_end":42681,"line_start":614,"line_end":614,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42686,"byte_end":42689,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42694,"byte_end":42788,"line_start":616,"line_end":616,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42793,"byte_end":42886,"line_start":617,"line_end":617,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42891,"byte_end":42976,"line_start":618,"line_end":618,"column_start":5,"column_end":90}},{"value":"/ `U16CString` will be invalid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":42981,"byte_end":43014,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43019,"byte_end":43022,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43027,"byte_end":43039,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43044,"byte_end":43047,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43052,"byte_end":43116,"line_start":623,"line_end":623,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44446,"byte_end":44457,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u16>>::from_os_str","value":"fn (s: impl AsRef<OsStr>) -> Result<Self, NulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr`.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43423,"byte_end":43503,"line_start":633,"line_end":633,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43508,"byte_end":43511,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43516,"byte_end":43570,"line_start":635,"line_end":635,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43575,"byte_end":43578,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43583,"byte_end":43597,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43602,"byte_end":43605,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43610,"byte_end":43682,"line_start":639,"line_end":639,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43687,"byte_end":43777,"line_start":640,"line_end":640,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43782,"byte_end":43785,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43790,"byte_end":43804,"line_start":642,"line_end":642,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43809,"byte_end":43812,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43817,"byte_end":43828,"line_start":644,"line_end":644,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43833,"byte_end":43864,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43869,"byte_end":43892,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43897,"byte_end":43940,"line_start":647,"line_end":647,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":43945,"byte_end":43997,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44002,"byte_end":44047,"line_start":649,"line_end":649,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44052,"byte_end":44059,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44064,"byte_end":44067,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44072,"byte_end":44146,"line_start":652,"line_end":652,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44151,"byte_end":44154,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44159,"byte_end":44170,"line_start":654,"line_end":654,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44175,"byte_end":44206,"line_start":655,"line_end":655,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44211,"byte_end":44239,"line_start":656,"line_end":656,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44244,"byte_end":44287,"line_start":657,"line_end":657,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44292,"byte_end":44333,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44338,"byte_end":44364,"line_start":659,"line_end":659,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44369,"byte_end":44422,"line_start":660,"line_end":660,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44427,"byte_end":44434,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45291,"byte_end":45312,"line_start":685,"line_end":685,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u16>>::from_os_str_unchecked","value":"fn (s: impl AsRef<OsStr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr`, without\n checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr`, without","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44599,"byte_end":44687,"line_start":667,"line_end":667,"column_start":5,"column_end":93}},{"value":"/ checking for interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44692,"byte_end":44729,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44734,"byte_end":44737,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44742,"byte_end":44754,"line_start":670,"line_end":670,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44759,"byte_end":44762,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str` except that no runtime assertion is made that","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44767,"byte_end":44859,"line_start":672,"line_end":672,"column_start":5,"column_end":97}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44864,"byte_end":44956,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ `U16CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44961,"byte_end":44978,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44983,"byte_end":44986,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":44991,"byte_end":45005,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45010,"byte_end":45013,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45018,"byte_end":45029,"line_start":678,"line_end":678,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45034,"byte_end":45065,"line_start":679,"line_end":679,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45070,"byte_end":45093,"line_start":680,"line_end":680,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45098,"byte_end":45141,"line_start":681,"line_end":681,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45146,"byte_end":45210,"line_start":682,"line_end":682,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45215,"byte_end":45260,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45265,"byte_end":45272,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46480,"byte_end":46500,"line_start":719,"line_end":719,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u16>>::from_os_str_with_nul","value":"fn (s: impl AsRef<OsStr>) -> Result<Self, MissingNulError<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr` with a nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45446,"byte_end":45536,"line_start":690,"line_end":690,"column_start":5,"column_end":95}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45541,"byte_end":45556,"line_start":691,"line_end":691,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45561,"byte_end":45564,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45569,"byte_end":45639,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45644,"byte_end":45647,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45652,"byte_end":45666,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45671,"byte_end":45674,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45679,"byte_end":45769,"line_start":697,"line_end":697,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45774,"byte_end":45842,"line_start":698,"line_end":698,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45847,"byte_end":45850,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45855,"byte_end":45869,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45874,"byte_end":45877,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45882,"byte_end":45893,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45898,"byte_end":45929,"line_start":703,"line_end":703,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45934,"byte_end":45962,"line_start":704,"line_end":704,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":45967,"byte_end":46010,"line_start":705,"line_end":705,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U16CString::from_os_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46015,"byte_end":46076,"line_start":706,"line_end":706,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46081,"byte_end":46127,"line_start":707,"line_end":707,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46132,"byte_end":46139,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46144,"byte_end":46147,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46152,"byte_end":46234,"line_start":710,"line_end":710,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46239,"byte_end":46242,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46247,"byte_end":46258,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46263,"byte_end":46294,"line_start":713,"line_end":713,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46299,"byte_end":46322,"line_start":714,"line_end":714,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46327,"byte_end":46370,"line_start":715,"line_end":715,"column_start":5,"column_end":48}},{"value":"/ let res = U16CString::from_os_str_with_nul(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46375,"byte_end":46425,"line_start":716,"line_end":716,"column_start":5,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46430,"byte_end":46456,"line_start":717,"line_end":717,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46461,"byte_end":46468,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47465,"byte_end":47495,"line_start":742,"line_end":742,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u16>>::from_os_str_with_nul_unchecked","value":"fn (s: impl AsRef<OsStr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U16CString` from anything that can be converted to an `OsStr` that should\n have a terminating nul, but without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U16CString` from anything that can be converted to an `OsStr` that should","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46663,"byte_end":46754,"line_start":724,"line_end":724,"column_start":5,"column_end":96}},{"value":"/ have a terminating nul, but without checking for any nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46759,"byte_end":46827,"line_start":725,"line_end":725,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46832,"byte_end":46835,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46840,"byte_end":46852,"line_start":727,"line_end":727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46857,"byte_end":46860,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str_with_nul` except that no runtime assertion is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46865,"byte_end":46956,"line_start":729,"line_end":729,"column_start":5,"column_end":96}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":46961,"byte_end":47049,"line_start":730,"line_end":730,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `U16CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47054,"byte_end":47129,"line_start":731,"line_end":731,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47134,"byte_end":47137,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47142,"byte_end":47156,"line_start":733,"line_end":733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47161,"byte_end":47164,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47169,"byte_end":47180,"line_start":735,"line_end":735,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47185,"byte_end":47216,"line_start":736,"line_end":736,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47221,"byte_end":47250,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47255,"byte_end":47298,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U16CString::from_os_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47303,"byte_end":47376,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47381,"byte_end":47434,"line_start":740,"line_end":740,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47439,"byte_end":47446,"line_start":741,"line_end":741,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48902,"byte_end":48912,"line_start":780,"line_end":780,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UCString<u32>>::from_chars","value":"fn (v: impl Into<Vec<char>>) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a container of wide character data.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a container of wide character data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47661,"byte_end":47731,"line_start":749,"line_end":749,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47736,"byte_end":47739,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47744,"byte_end":47837,"line_start":751,"line_end":751,"column_start":5,"column_end":98}},{"value":"/ new string. The data will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47842,"byte_end":47906,"line_start":752,"line_end":752,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47911,"byte_end":47914,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47919,"byte_end":47933,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47938,"byte_end":47941,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47946,"byte_end":48018,"line_start":756,"line_end":756,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain the `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48023,"byte_end":48115,"line_start":757,"line_end":757,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48120,"byte_end":48123,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48128,"byte_end":48142,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48147,"byte_end":48150,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48155,"byte_end":48166,"line_start":761,"line_end":761,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48171,"byte_end":48202,"line_start":762,"line_end":762,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48207,"byte_end":48255,"line_start":763,"line_end":763,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48260,"byte_end":48327,"line_start":764,"line_end":764,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48332,"byte_end":48375,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars(v).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48380,"byte_end":48431,"line_start":766,"line_end":766,"column_start":5,"column_end":56}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48436,"byte_end":48479,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48484,"byte_end":48491,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48496,"byte_end":48499,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48504,"byte_end":48578,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48583,"byte_end":48586,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48591,"byte_end":48602,"line_start":772,"line_end":772,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48607,"byte_end":48638,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"T\\u{0}est\".chars().collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48643,"byte_end":48696,"line_start":774,"line_end":774,"column_start":5,"column_end":58}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48701,"byte_end":48744,"line_start":775,"line_end":775,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48749,"byte_end":48789,"line_start":776,"line_end":776,"column_start":5,"column_end":45}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48794,"byte_end":48820,"line_start":777,"line_end":777,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 1);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48825,"byte_end":48878,"line_start":778,"line_end":778,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":48883,"byte_end":48890,"line_start":779,"line_end":779,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50303,"byte_end":50322,"line_start":815,"line_end":815,"column_start":12,"column_end":31},"name":"from_chars_with_nul","qualname":"<UCString<u32>>::from_chars_with_nul","value":"fn (v: impl Into<Vec<char>>) -> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a nul-terminated container of UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a nul-terminated container of UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49070,"byte_end":49147,"line_start":785,"line_end":785,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49152,"byte_end":49155,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This method will consume the provided data and use the underlying elements to construct a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49160,"byte_end":49253,"line_start":787,"line_end":787,"column_start":5,"column_end":98}},{"value":"/ new string. The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49258,"byte_end":49340,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49345,"byte_end":49348,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49353,"byte_end":49367,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49372,"byte_end":49375,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49380,"byte_end":49470,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49475,"byte_end":49543,"line_start":793,"line_end":793,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49548,"byte_end":49551,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49556,"byte_end":49570,"line_start":795,"line_end":795,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49575,"byte_end":49578,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49583,"byte_end":49594,"line_start":797,"line_end":797,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49599,"byte_end":49630,"line_start":798,"line_end":798,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\\u{0}\".chars().collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49635,"byte_end":49688,"line_start":799,"line_end":799,"column_start":5,"column_end":58}},{"value":"/ # let cloned: Vec<u32> = v[..4].iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49693,"byte_end":49765,"line_start":800,"line_end":800,"column_start":5,"column_end":77}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49770,"byte_end":49813,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_chars_with_nul(v).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49818,"byte_end":49878,"line_start":802,"line_end":802,"column_start":5,"column_end":65}},{"value":"/ # assert_eq!(wcstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49883,"byte_end":49926,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49931,"byte_end":49938,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49943,"byte_end":49946,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":49951,"byte_end":50033,"line_start":806,"line_end":806,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50038,"byte_end":50041,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50046,"byte_end":50057,"line_start":808,"line_end":808,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50062,"byte_end":50093,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50098,"byte_end":50146,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50151,"byte_end":50194,"line_start":811,"line_end":811,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_chars_with_nul(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50199,"byte_end":50248,"line_start":812,"line_end":812,"column_start":5,"column_end":54}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50253,"byte_end":50279,"line_start":813,"line_end":813,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50284,"byte_end":50291,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50963,"byte_end":50983,"line_start":830,"line_end":830,"column_start":19,"column_end":39},"name":"from_chars_unchecked","qualname":"<UCString<u32>>::from_chars_unchecked","value":"fn (v: impl Into<Vec<char>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `U32CString` from a vector without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Creates a `U32CString` from a vector without checking for interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50501,"byte_end":50583,"line_start":820,"line_end":820,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50588,"byte_end":50591,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ A terminating nul value will be appended if the vector does not already have a terminating","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50596,"byte_end":50690,"line_start":822,"line_end":822,"column_start":5,"column_end":99}},{"value":"/ nul.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50695,"byte_end":50703,"line_start":823,"line_end":823,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50708,"byte_end":50711,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50716,"byte_end":50728,"line_start":825,"line_end":825,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50733,"byte_end":50736,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `new` except that no runtime assertion is made that `v`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50741,"byte_end":50829,"line_start":827,"line_end":827,"column_start":5,"column_end":93}},{"value":"/ contains no nul values. Providing a vector with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50834,"byte_end":50922,"line_start":828,"line_end":828,"column_start":5,"column_end":93}},{"value":"/ `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":50927,"byte_end":50944,"line_start":829,"line_end":829,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51560,"byte_end":51589,"line_start":843,"line_end":843,"column_start":19,"column_end":48},"name":"from_chars_with_nul_unchecked","qualname":"<UCString<u32>>::from_chars_with_nul_unchecked","value":"fn (v: impl Into<Vec<char>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `U32CString` from a vector that should have a nul terminator, without checking\n for any nul values.","sig":null,"attributes":[{"value":"/ Creates a `U32CString` from a vector that should have a nul terminator, without checking","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51122,"byte_end":51214,"line_start":835,"line_end":835,"column_start":5,"column_end":97}},{"value":"/ for any nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51219,"byte_end":51242,"line_start":836,"line_end":836,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51247,"byte_end":51250,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51255,"byte_end":51267,"line_start":838,"line_end":838,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51272,"byte_end":51275,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_vec_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51280,"byte_end":51373,"line_start":840,"line_end":840,"column_start":5,"column_end":98}},{"value":"/ that `v` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51378,"byte_end":51471,"line_start":841,"line_end":841,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51476,"byte_end":51541,"line_start":842,"line_end":842,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52717,"byte_end":52725,"line_start":877,"line_end":877,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UCString<u32>>::from_str","value":"fn (s: impl AsRef<str>) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str`.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51737,"byte_end":51780,"line_start":848,"line_end":848,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51785,"byte_end":51788,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51793,"byte_end":51847,"line_start":850,"line_end":850,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51852,"byte_end":51855,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51860,"byte_end":51874,"line_start":852,"line_end":852,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51879,"byte_end":51882,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51887,"byte_end":51959,"line_start":854,"line_end":854,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":51964,"byte_end":52054,"line_start":855,"line_end":855,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52059,"byte_end":52062,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52067,"byte_end":52081,"line_start":857,"line_end":857,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52086,"byte_end":52089,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52094,"byte_end":52105,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52110,"byte_end":52141,"line_start":860,"line_end":860,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52146,"byte_end":52169,"line_start":861,"line_end":861,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52174,"byte_end":52217,"line_start":862,"line_end":862,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52222,"byte_end":52271,"line_start":863,"line_end":863,"column_start":5,"column_end":54}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52276,"byte_end":52321,"line_start":864,"line_end":864,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52326,"byte_end":52333,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52338,"byte_end":52341,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52346,"byte_end":52420,"line_start":867,"line_end":867,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52425,"byte_end":52428,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52433,"byte_end":52444,"line_start":869,"line_end":869,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52449,"byte_end":52480,"line_start":870,"line_end":870,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52485,"byte_end":52513,"line_start":871,"line_end":871,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52518,"byte_end":52561,"line_start":872,"line_end":872,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52566,"byte_end":52604,"line_start":873,"line_end":873,"column_start":5,"column_end":43}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52609,"byte_end":52635,"line_start":874,"line_end":874,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52640,"byte_end":52693,"line_start":875,"line_end":875,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52698,"byte_end":52705,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53520,"byte_end":53538,"line_start":899,"line_end":899,"column_start":19,"column_end":37},"name":"from_str_unchecked","qualname":"<UCString<u32>>::from_str_unchecked","value":"fn (s: impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str`, without checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str`, without checking for interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52879,"byte_end":52964,"line_start":882,"line_end":882,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52969,"byte_end":52972,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52977,"byte_end":52989,"line_start":884,"line_end":884,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":52994,"byte_end":52997,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str` except that no runtime assertion is made that `s`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53002,"byte_end":53095,"line_start":886,"line_end":886,"column_start":5,"column_end":98}},{"value":"/ contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53100,"byte_end":53188,"line_start":887,"line_end":887,"column_start":5,"column_end":93}},{"value":"/ `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53193,"byte_end":53210,"line_start":888,"line_end":888,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53215,"byte_end":53218,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53223,"byte_end":53237,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53242,"byte_end":53245,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53250,"byte_end":53261,"line_start":892,"line_end":892,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53266,"byte_end":53297,"line_start":893,"line_end":893,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53302,"byte_end":53325,"line_start":894,"line_end":894,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53330,"byte_end":53373,"line_start":895,"line_end":895,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53378,"byte_end":53439,"line_start":896,"line_end":896,"column_start":5,"column_end":66}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53444,"byte_end":53489,"line_start":897,"line_end":897,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53494,"byte_end":53501,"line_start":898,"line_end":898,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54662,"byte_end":54679,"line_start":932,"line_end":932,"column_start":12,"column_end":29},"name":"from_str_with_nul","qualname":"<UCString<u32>>::from_str_with_nul","value":"fn (s: impl AsRef<str>) -> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str` with a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str` with a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53679,"byte_end":53744,"line_start":904,"line_end":904,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53749,"byte_end":53752,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53757,"byte_end":53827,"line_start":906,"line_end":906,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53832,"byte_end":53835,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53840,"byte_end":53854,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53859,"byte_end":53862,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53867,"byte_end":53957,"line_start":910,"line_end":910,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":53962,"byte_end":54030,"line_start":911,"line_end":911,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54035,"byte_end":54038,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54043,"byte_end":54057,"line_start":913,"line_end":913,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54062,"byte_end":54065,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54070,"byte_end":54081,"line_start":915,"line_end":915,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54086,"byte_end":54117,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54122,"byte_end":54150,"line_start":917,"line_end":917,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54155,"byte_end":54198,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54203,"byte_end":54261,"line_start":919,"line_end":919,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54266,"byte_end":54312,"line_start":920,"line_end":920,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54317,"byte_end":54324,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54329,"byte_end":54332,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54337,"byte_end":54419,"line_start":923,"line_end":923,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54424,"byte_end":54427,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54432,"byte_end":54443,"line_start":925,"line_end":925,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54448,"byte_end":54479,"line_start":926,"line_end":926,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54484,"byte_end":54507,"line_start":927,"line_end":927,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54512,"byte_end":54555,"line_start":928,"line_end":928,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_str_with_nul(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54560,"byte_end":54607,"line_start":929,"line_end":929,"column_start":5,"column_end":52}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54612,"byte_end":54638,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54643,"byte_end":54650,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55608,"byte_end":55635,"line_start":955,"line_end":955,"column_start":19,"column_end":46},"name":"from_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_str_with_nul_unchecked","value":"fn (s: impl AsRef<str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from a `str` that should have a terminating nul, but without\n checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from a `str` that should have a terminating nul, but without","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54849,"byte_end":54939,"line_start":937,"line_end":937,"column_start":5,"column_end":95}},{"value":"/ checking for any nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54944,"byte_end":54976,"line_start":938,"line_end":938,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54981,"byte_end":54984,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":54989,"byte_end":55001,"line_start":940,"line_end":940,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55006,"byte_end":55009,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_str_with_nul` except that no runtime assertion is made","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55014,"byte_end":55107,"line_start":942,"line_end":942,"column_start":5,"column_end":98}},{"value":"/ that `s` contains no nul values. Providing a vector with interior nul values or without a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55112,"byte_end":55205,"line_start":943,"line_end":943,"column_start":5,"column_end":98}},{"value":"/ terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55210,"byte_end":55275,"line_start":944,"line_end":944,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55280,"byte_end":55283,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55288,"byte_end":55302,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55307,"byte_end":55310,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55315,"byte_end":55326,"line_start":948,"line_end":948,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55331,"byte_end":55362,"line_start":949,"line_end":949,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55367,"byte_end":55396,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55401,"byte_end":55444,"line_start":951,"line_end":951,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55449,"byte_end":55519,"line_start":952,"line_end":952,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55524,"byte_end":55577,"line_start":953,"line_end":953,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55582,"byte_end":55589,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56502,"byte_end":56510,"line_start":979,"line_end":979,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UCString<u32>>::from_ptr","value":"fn (p: *const u32, len: usize) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55785,"byte_end":55860,"line_start":960,"line_end":960,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55865,"byte_end":55868,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55873,"byte_end":55957,"line_start":962,"line_end":962,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55962,"byte_end":55965,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":55970,"byte_end":56024,"line_start":964,"line_end":964,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56029,"byte_end":56032,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56037,"byte_end":56051,"line_start":966,"line_end":966,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56056,"byte_end":56059,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56064,"byte_end":56136,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56141,"byte_end":56231,"line_start":969,"line_end":969,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56236,"byte_end":56239,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56244,"byte_end":56256,"line_start":971,"line_end":971,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56261,"byte_end":56264,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56269,"byte_end":56363,"line_start":973,"line_end":973,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56368,"byte_end":56381,"line_start":974,"line_end":974,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56386,"byte_end":56389,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56394,"byte_end":56406,"line_start":976,"line_end":976,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56411,"byte_end":56414,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56419,"byte_end":56483,"line_start":978,"line_end":978,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57449,"byte_end":57467,"line_start":1003,"line_end":1003,"column_start":19,"column_end":37},"name":"from_ptr_unchecked","qualname":"<UCString<u32>>::from_ptr_unchecked","value":"fn (p: *const u32, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56774,"byte_end":56849,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56854,"byte_end":56857,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56862,"byte_end":56946,"line_start":990,"line_end":990,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56951,"byte_end":56954,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":56959,"byte_end":57021,"line_start":992,"line_end":992,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57026,"byte_end":57029,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57034,"byte_end":57046,"line_start":994,"line_end":994,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57051,"byte_end":57054,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57059,"byte_end":57153,"line_start":996,"line_end":996,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57158,"byte_end":57252,"line_start":997,"line_end":997,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U16CString` will be invalid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57257,"byte_end":57328,"line_start":998,"line_end":998,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57333,"byte_end":57336,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57341,"byte_end":57353,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57358,"byte_end":57361,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57366,"byte_end":57430,"line_start":1002,"line_end":1002,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58447,"byte_end":58464,"line_start":1031,"line_end":1031,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCString<u32>>::from_ptr_with_nul","value":"fn (p: *const u32, len: usize) -> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57719,"byte_end":57793,"line_start":1012,"line_end":1012,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57798,"byte_end":57801,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57806,"byte_end":57890,"line_start":1014,"line_end":1014,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57895,"byte_end":57898,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57903,"byte_end":57973,"line_start":1016,"line_end":1016,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57978,"byte_end":57981,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":57986,"byte_end":58000,"line_start":1018,"line_end":1018,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58005,"byte_end":58008,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58013,"byte_end":58103,"line_start":1020,"line_end":1020,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58108,"byte_end":58176,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58181,"byte_end":58184,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58189,"byte_end":58201,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58206,"byte_end":58209,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58214,"byte_end":58308,"line_start":1025,"line_end":1025,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58313,"byte_end":58326,"line_start":1026,"line_end":1026,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58331,"byte_end":58334,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58339,"byte_end":58351,"line_start":1028,"line_end":1028,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58356,"byte_end":58359,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58364,"byte_end":58428,"line_start":1030,"line_end":1030,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59619,"byte_end":59646,"line_start":1060,"line_end":1060,"column_start":19,"column_end":46},"name":"from_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_ptr_with_nul_unchecked","value":"fn (p: *const u32, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `u32` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `u32` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58772,"byte_end":58846,"line_start":1043,"line_end":1043,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58851,"byte_end":58854,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `u32` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58859,"byte_end":58943,"line_start":1045,"line_end":1045,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58948,"byte_end":58951,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":58956,"byte_end":59046,"line_start":1047,"line_end":1047,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59051,"byte_end":59140,"line_start":1048,"line_end":1048,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59145,"byte_end":59148,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59153,"byte_end":59165,"line_start":1050,"line_end":1050,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59170,"byte_end":59173,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59178,"byte_end":59272,"line_start":1052,"line_end":1052,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59277,"byte_end":59370,"line_start":1053,"line_end":1053,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59375,"byte_end":59460,"line_start":1054,"line_end":1054,"column_start":5,"column_end":90}},{"value":"/ `U32CString` will be invalid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59465,"byte_end":59498,"line_start":1055,"line_end":1055,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59503,"byte_end":59506,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59511,"byte_end":59523,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59528,"byte_end":59531,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59536,"byte_end":59600,"line_start":1059,"line_end":1059,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60626,"byte_end":60639,"line_start":1088,"line_end":1088,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UCString<u32>>::from_char_ptr","value":"fn (p: *const char, len: usize) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59907,"byte_end":59983,"line_start":1069,"line_end":1069,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59988,"byte_end":59991,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":59996,"byte_end":60081,"line_start":1071,"line_end":1071,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60086,"byte_end":60089,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60094,"byte_end":60148,"line_start":1073,"line_end":1073,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60153,"byte_end":60156,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60161,"byte_end":60175,"line_start":1075,"line_end":1075,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60180,"byte_end":60183,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60188,"byte_end":60260,"line_start":1077,"line_end":1077,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u32>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60265,"byte_end":60355,"line_start":1078,"line_end":1078,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60360,"byte_end":60363,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60368,"byte_end":60380,"line_start":1080,"line_end":1080,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60385,"byte_end":60388,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60393,"byte_end":60487,"line_start":1082,"line_end":1082,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60492,"byte_end":60505,"line_start":1083,"line_end":1083,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60510,"byte_end":60513,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60518,"byte_end":60530,"line_start":1085,"line_end":1085,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60535,"byte_end":60538,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60543,"byte_end":60607,"line_start":1087,"line_end":1087,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61445,"byte_end":61468,"line_start":1107,"line_end":1107,"column_start":19,"column_end":42},"name":"from_char_ptr_unchecked","qualname":"<UCString<u32>>::from_char_ptr_unchecked","value":"fn (p: *const char, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32CString` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32CString` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60768,"byte_end":60844,"line_start":1092,"line_end":1092,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60849,"byte_end":60852,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60857,"byte_end":60942,"line_start":1094,"line_end":1094,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60947,"byte_end":60950,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ The string will **not** be checked for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":60955,"byte_end":61017,"line_start":1096,"line_end":1096,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61022,"byte_end":61025,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61030,"byte_end":61042,"line_start":1098,"line_end":1098,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61047,"byte_end":61050,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61055,"byte_end":61149,"line_start":1100,"line_end":1100,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for invalid nul values is performed, so if any elements","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61154,"byte_end":61248,"line_start":1101,"line_end":1101,"column_start":5,"column_end":99}},{"value":"/ of `p` are a nul value, the resulting `U32CString` will be invalid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61253,"byte_end":61324,"line_start":1102,"line_end":1102,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61329,"byte_end":61332,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61337,"byte_end":61349,"line_start":1104,"line_end":1104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61354,"byte_end":61357,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61362,"byte_end":61426,"line_start":1106,"line_end":1106,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62314,"byte_end":62336,"line_start":1130,"line_end":1130,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCString<u32>>::from_char_ptr_with_nul","value":"fn (p: *const char, len: usize) -> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61584,"byte_end":61659,"line_start":1111,"line_end":1111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61664,"byte_end":61667,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61672,"byte_end":61757,"line_start":1113,"line_end":1113,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61762,"byte_end":61765,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61770,"byte_end":61840,"line_start":1115,"line_end":1115,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61845,"byte_end":61848,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61853,"byte_end":61867,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61872,"byte_end":61875,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61880,"byte_end":61970,"line_start":1119,"line_end":1119,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u32>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":61975,"byte_end":62043,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62048,"byte_end":62051,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62056,"byte_end":62068,"line_start":1122,"line_end":1122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62073,"byte_end":62076,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62081,"byte_end":62175,"line_start":1124,"line_end":1124,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62180,"byte_end":62193,"line_start":1125,"line_end":1125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62198,"byte_end":62201,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62206,"byte_end":62218,"line_start":1127,"line_end":1127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62223,"byte_end":62226,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62231,"byte_end":62295,"line_start":1129,"line_end":1129,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63353,"byte_end":63385,"line_start":1154,"line_end":1154,"column_start":19,"column_end":51},"name":"from_char_ptr_with_nul_unchecked","qualname":"<UCString<u32>>::from_char_ptr_with_nul_unchecked","value":"fn (p: *const char, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `U32String` copied from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a new `U32String` copied from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62504,"byte_end":62579,"line_start":1137,"line_end":1137,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62584,"byte_end":62587,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62592,"byte_end":62677,"line_start":1139,"line_end":1139,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62682,"byte_end":62685,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The data should end with a nul terminator, but no checking is done on whether the data","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62690,"byte_end":62780,"line_start":1141,"line_end":1141,"column_start":5,"column_end":95}},{"value":"/ actually ends with a nul terminator, or if the data contains any interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62785,"byte_end":62874,"line_start":1142,"line_end":1142,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62879,"byte_end":62882,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62887,"byte_end":62899,"line_start":1144,"line_end":1144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62904,"byte_end":62907,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":62912,"byte_end":63006,"line_start":1146,"line_end":1146,"column_start":5,"column_end":99}},{"value":"/ elements. In addition, no checking for nul values is performed, so if there data does not","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63011,"byte_end":63104,"line_start":1147,"line_end":1147,"column_start":5,"column_end":98}},{"value":"/ end with a nul terminator, or if there are any interior nul values, the resulting","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63109,"byte_end":63194,"line_start":1148,"line_end":1148,"column_start":5,"column_end":90}},{"value":"/ `U32CString` will be invalid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63199,"byte_end":63232,"line_start":1149,"line_end":1149,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63237,"byte_end":63240,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63245,"byte_end":63257,"line_start":1151,"line_end":1151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63262,"byte_end":63265,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63270,"byte_end":63334,"line_start":1153,"line_end":1153,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64533,"byte_end":64544,"line_start":1187,"line_end":1187,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UCString<u32>>::from_os_str","value":"fn (s: impl AsRef<OsStr>) -> Result<Self, NulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr`.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63510,"byte_end":63590,"line_start":1158,"line_end":1158,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63595,"byte_end":63598,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ The string will be scanned for invalid nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63603,"byte_end":63657,"line_start":1160,"line_end":1160,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63662,"byte_end":63665,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63670,"byte_end":63684,"line_start":1162,"line_end":1162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63689,"byte_end":63692,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data contains a nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63697,"byte_end":63769,"line_start":1164,"line_end":1164,"column_start":5,"column_end":77}},{"value":"/ The returned error will contain a `Vec<u16>` as well as the position of the nul value.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63774,"byte_end":63864,"line_start":1165,"line_end":1165,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63869,"byte_end":63872,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63877,"byte_end":63891,"line_start":1167,"line_end":1167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63896,"byte_end":63899,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63904,"byte_end":63915,"line_start":1169,"line_end":1169,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63920,"byte_end":63951,"line_start":1170,"line_end":1170,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63956,"byte_end":63979,"line_start":1171,"line_end":1171,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":63984,"byte_end":64027,"line_start":1172,"line_end":1172,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64032,"byte_end":64084,"line_start":1173,"line_end":1173,"column_start":5,"column_end":57}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64089,"byte_end":64134,"line_start":1174,"line_end":1174,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64139,"byte_end":64146,"line_start":1175,"line_end":1175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64151,"byte_end":64154,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64159,"byte_end":64233,"line_start":1177,"line_end":1177,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64238,"byte_end":64241,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64246,"byte_end":64257,"line_start":1179,"line_end":1179,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64262,"byte_end":64293,"line_start":1180,"line_end":1180,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64298,"byte_end":64326,"line_start":1181,"line_end":1181,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64331,"byte_end":64374,"line_start":1182,"line_end":1182,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64379,"byte_end":64420,"line_start":1183,"line_end":1183,"column_start":5,"column_end":46}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64425,"byte_end":64451,"line_start":1184,"line_end":1184,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(res.err().unwrap().nul_position(), 2);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64456,"byte_end":64509,"line_start":1185,"line_end":1185,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64514,"byte_end":64521,"line_start":1186,"line_end":1186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65410,"byte_end":65431,"line_start":1210,"line_end":1210,"column_start":19,"column_end":40},"name":"from_os_str_unchecked","qualname":"<UCString<u32>>::from_os_str_unchecked","value":"fn (s: impl AsRef<OsStr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr`, without\n checking for interior nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr`, without","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64718,"byte_end":64806,"line_start":1192,"line_end":1192,"column_start":5,"column_end":93}},{"value":"/ checking for interior nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64811,"byte_end":64848,"line_start":1193,"line_end":1193,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64853,"byte_end":64856,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64861,"byte_end":64873,"line_start":1195,"line_end":1195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64878,"byte_end":64881,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str` except that no runtime assertion is made that","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64886,"byte_end":64978,"line_start":1197,"line_end":1197,"column_start":5,"column_end":97}},{"value":"/ `s` contains no nul values. Providing a string with nul values will result in an invalid","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":64983,"byte_end":65075,"line_start":1198,"line_end":1198,"column_start":5,"column_end":97}},{"value":"/ `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65080,"byte_end":65097,"line_start":1199,"line_end":1199,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65102,"byte_end":65105,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65110,"byte_end":65124,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65129,"byte_end":65132,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65137,"byte_end":65148,"line_start":1203,"line_end":1203,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65153,"byte_end":65184,"line_start":1204,"line_end":1204,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65189,"byte_end":65212,"line_start":1205,"line_end":1205,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65217,"byte_end":65260,"line_start":1206,"line_end":1206,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65265,"byte_end":65329,"line_start":1207,"line_end":1207,"column_start":5,"column_end":69}},{"value":"/ # assert_eq!(wcstr.to_string_lossy(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65334,"byte_end":65379,"line_start":1208,"line_end":1208,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65384,"byte_end":65391,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66626,"byte_end":66646,"line_start":1244,"line_end":1244,"column_start":12,"column_end":32},"name":"from_os_str_with_nul","qualname":"<UCString<u32>>::from_os_str_with_nul","value":"fn (s: impl AsRef<OsStr>) -> Result<Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr` with a nul\n terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr` with a nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65592,"byte_end":65682,"line_start":1215,"line_end":1215,"column_start":5,"column_end":95}},{"value":"/ terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65687,"byte_end":65702,"line_start":1216,"line_end":1216,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65707,"byte_end":65710,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ The string will be truncated at the first nul value in the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65715,"byte_end":65785,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65790,"byte_end":65793,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65798,"byte_end":65812,"line_start":1220,"line_end":1220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65817,"byte_end":65820,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the data does not contain a nul to terminate the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65825,"byte_end":65915,"line_start":1222,"line_end":1222,"column_start":5,"column_end":95}},{"value":"/ string. The returned error will contain the consumed `Vec<u16>`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65920,"byte_end":65988,"line_start":1223,"line_end":1223,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":65993,"byte_end":65996,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66001,"byte_end":66015,"line_start":1225,"line_end":1225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66020,"byte_end":66023,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66028,"byte_end":66039,"line_start":1227,"line_end":1227,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66044,"byte_end":66075,"line_start":1228,"line_end":1228,"column_start":5,"column_end":36}},{"value":"/ let s = \"My\\u{0}String\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66080,"byte_end":66108,"line_start":1229,"line_end":1229,"column_start":5,"column_end":33}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66113,"byte_end":66156,"line_start":1230,"line_end":1230,"column_start":5,"column_end":48}},{"value":"/ let wcstr = U32CString::from_os_str_with_nul(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66161,"byte_end":66222,"line_start":1231,"line_end":1231,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66227,"byte_end":66273,"line_start":1232,"line_end":1232,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66278,"byte_end":66285,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66290,"byte_end":66293,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ The following example demonstrates errors from missing nul values in a vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66298,"byte_end":66380,"line_start":1235,"line_end":1235,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66385,"byte_end":66388,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66393,"byte_end":66404,"line_start":1237,"line_end":1237,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66409,"byte_end":66440,"line_start":1238,"line_end":1238,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66445,"byte_end":66468,"line_start":1239,"line_end":1239,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66473,"byte_end":66516,"line_start":1240,"line_end":1240,"column_start":5,"column_end":48}},{"value":"/ let res = U32CString::from_os_str_with_nul(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66521,"byte_end":66571,"line_start":1241,"line_end":1241,"column_start":5,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66576,"byte_end":66602,"line_start":1242,"line_end":1242,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66607,"byte_end":66614,"line_start":1243,"line_end":1243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67638,"byte_end":67668,"line_start":1267,"line_end":1267,"column_start":19,"column_end":49},"name":"from_os_str_with_nul_unchecked","qualname":"<UCString<u32>>::from_os_str_with_nul_unchecked","value":"fn (s: impl AsRef<OsStr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CString` from anything that can be converted to an `OsStr` that should\n have a terminating nul, but without checking for any nul values.","sig":null,"attributes":[{"value":"/ Constructs a `U32CString` from anything that can be converted to an `OsStr` that should","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66836,"byte_end":66927,"line_start":1249,"line_end":1249,"column_start":5,"column_end":96}},{"value":"/ have a terminating nul, but without checking for any nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":66932,"byte_end":67000,"line_start":1250,"line_end":1250,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67005,"byte_end":67008,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67013,"byte_end":67025,"line_start":1252,"line_end":1252,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67030,"byte_end":67033,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ This method is equivalent to `from_os_str_with_nul` except that no runtime assertion is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67038,"byte_end":67129,"line_start":1254,"line_end":1254,"column_start":5,"column_end":96}},{"value":"/ made that `s` contains no nul values. Providing a vector with interior nul values or","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67134,"byte_end":67222,"line_start":1255,"line_end":1255,"column_start":5,"column_end":93}},{"value":"/ without a terminating nul value will result in an invalid `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67227,"byte_end":67302,"line_start":1256,"line_end":1256,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67307,"byte_end":67310,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67315,"byte_end":67329,"line_start":1258,"line_end":1258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67334,"byte_end":67337,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67342,"byte_end":67353,"line_start":1260,"line_end":1260,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67358,"byte_end":67389,"line_start":1261,"line_end":1261,"column_start":5,"column_end":36}},{"value":"/ let s = \"My String\\u{0}\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67394,"byte_end":67423,"line_start":1262,"line_end":1262,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67428,"byte_end":67471,"line_start":1263,"line_end":1263,"column_start":5,"column_end":48}},{"value":"/ let wcstr = unsafe { U32CString::from_os_str_with_nul_unchecked(s) };","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67476,"byte_end":67549,"line_start":1264,"line_end":1264,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(wcstr.to_string_lossy(), \"My String\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67554,"byte_end":67607,"line_start":1265,"line_end":1265,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67612,"byte_end":67619,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67913,"byte_end":67916,"line_start":1275,"line_end":1275,"column_start":12,"column_end":15},"name":"new","qualname":"<UCStr<C>>::new","value":"fn <S> (s: &S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a `UCStr`.\n","sig":null,"attributes":[{"value":"/ Coerces a value into a `UCStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67866,"byte_end":67901,"line_start":1274,"line_end":1274,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68972,"byte_end":68984,"line_start":1301,"line_end":1301,"column_start":19,"column_end":31},"name":"from_ptr_str","qualname":"<UCStr<C>>::from_ptr_str","value":"fn <'a> (p: *const C) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a nul-terminated string pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67994,"byte_end":68055,"line_start":1279,"line_end":1279,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68060,"byte_end":68063,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68068,"byte_end":68161,"line_start":1281,"line_end":1281,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68166,"byte_end":68260,"line_start":1282,"line_end":1282,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68265,"byte_end":68268,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68273,"byte_end":68285,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68290,"byte_end":68293,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68298,"byte_end":68391,"line_start":1286,"line_end":1286,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68396,"byte_end":68471,"line_start":1287,"line_end":1287,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68476,"byte_end":68479,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68484,"byte_end":68509,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68514,"byte_end":68517,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68522,"byte_end":68534,"line_start":1291,"line_end":1291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68539,"byte_end":68542,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68547,"byte_end":68587,"line_start":1293,"line_end":1293,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68592,"byte_end":68595,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68600,"byte_end":68612,"line_start":1295,"line_end":1295,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68617,"byte_end":68620,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68625,"byte_end":68715,"line_start":1297,"line_end":1297,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68720,"byte_end":68810,"line_start":1298,"line_end":1298,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68815,"byte_end":68910,"line_start":1299,"line_end":1299,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":68915,"byte_end":68953,"line_start":1300,"line_end":1300,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70482,"byte_end":70499,"line_start":1337,"line_end":1337,"column_start":19,"column_end":36},"name":"from_ptr_with_nul","qualname":"<UCStr<C>>::from_ptr_with_nul","value":"fn <'a> (p: *const C, len: usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69234,"byte_end":69286,"line_start":1310,"line_end":1310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69291,"byte_end":69294,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69299,"byte_end":69386,"line_start":1312,"line_end":1312,"column_start":5,"column_end":92}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means that","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69391,"byte_end":69487,"line_start":1313,"line_end":1313,"column_start":5,"column_end":101}},{"value":"/ `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69492,"byte_end":69558,"line_start":1314,"line_end":1314,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69563,"byte_end":69566,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69571,"byte_end":69583,"line_start":1316,"line_end":1316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69588,"byte_end":69591,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69596,"byte_end":69690,"line_start":1318,"line_end":1318,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69695,"byte_end":69708,"line_start":1319,"line_end":1319,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69713,"byte_end":69716,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null, even for zero `len`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69721,"byte_end":69767,"line_start":1321,"line_end":1321,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69772,"byte_end":69775,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values will","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69780,"byte_end":69872,"line_start":1323,"line_end":1323,"column_start":5,"column_end":97}},{"value":"/ result in an invalid `UCStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69877,"byte_end":69910,"line_start":1324,"line_end":1324,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69915,"byte_end":69918,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69923,"byte_end":69935,"line_start":1326,"line_end":1326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69940,"byte_end":69943,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null or if a nul value is not found at offset `len` of `p`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":69948,"byte_end":70042,"line_start":1328,"line_end":1328,"column_start":5,"column_end":99}},{"value":"/ Only pointers with a nul terminator are valid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70047,"byte_end":70097,"line_start":1329,"line_end":1329,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70102,"byte_end":70105,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70110,"byte_end":70122,"line_start":1331,"line_end":1331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70127,"byte_end":70130,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70135,"byte_end":70225,"line_start":1333,"line_end":1333,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70230,"byte_end":70320,"line_start":1334,"line_end":1334,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70325,"byte_end":70420,"line_start":1335,"line_end":1335,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70425,"byte_end":70463,"line_start":1336,"line_end":1336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71061,"byte_end":71080,"line_start":1350,"line_end":1350,"column_start":12,"column_end":31},"name":"from_slice_with_nul","qualname":"<UCStr<C>>::from_slice_with_nul","value":"fn (slice: &[C]) -> Result<&Self, MissingNulError<C>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCStr` from a slice of values that has a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `UCStr` from a slice of values that has a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70673,"byte_end":70747,"line_start":1342,"line_end":1342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70752,"byte_end":70755,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70760,"byte_end":70853,"line_start":1344,"line_end":1344,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the `UCStr` slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70858,"byte_end":70941,"line_start":1345,"line_end":1345,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70946,"byte_end":70949,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70954,"byte_end":70967,"line_start":1347,"line_end":1347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70972,"byte_end":70975,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ If there are no no nul values in the slice, an error is returned.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":70980,"byte_end":71049,"line_start":1349,"line_end":1349,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71737,"byte_end":71766,"line_start":1365,"line_end":1365,"column_start":19,"column_end":48},"name":"from_slice_with_nul_unchecked","qualname":"<UCStr<C>>::from_slice_with_nul_unchecked","value":"fn (slice: &[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UCStr` from a slice of values that has a nul terminator. No\n checking for nul values is performed.","sig":null,"attributes":[{"value":"/ Constructs a `UCStr` from a slice of values that has a nul terminator. No","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71355,"byte_end":71432,"line_start":1357,"line_end":1357,"column_start":5,"column_end":82}},{"value":"/ checking for nul values is performed.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71437,"byte_end":71478,"line_start":1358,"line_end":1358,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71483,"byte_end":71486,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71491,"byte_end":71503,"line_start":1360,"line_end":1360,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71508,"byte_end":71511,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid `UCStr` values when the slice","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71516,"byte_end":71604,"line_start":1362,"line_end":1362,"column_start":5,"column_end":93}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71609,"byte_end":71696,"line_start":1363,"line_end":1363,"column_start":5,"column_end":92}},{"value":"/ in the slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71701,"byte_end":71718,"line_start":1364,"line_end":1364,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71902,"byte_end":71913,"line_start":1370,"line_end":1370,"column_start":12,"column_end":23},"name":"to_ucstring","qualname":"<UCStr<C>>::to_ucstring","value":"fn (&self) -> UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to an new owned `UString`.\n","sig":null,"attributes":[{"value":"/ Copies the wide string to an new owned `UString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":71837,"byte_end":71890,"line_start":1369,"line_end":1369,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73220,"byte_end":73230,"line_start":1407,"line_end":1407,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UCStr<C>>::to_ustring","value":"fn (&self) -> UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a new owned `UString`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a new owned `UString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72029,"byte_end":72081,"line_start":1374,"line_end":1374,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72086,"byte_end":72089,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ The `UString` will **not** have a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72094,"byte_end":72147,"line_start":1376,"line_end":1376,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72152,"byte_end":72155,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72160,"byte_end":72174,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72179,"byte_end":72182,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72187,"byte_end":72198,"line_start":1380,"line_end":1380,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72203,"byte_end":72234,"line_start":1381,"line_end":1381,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U16CString::from_str(\"MyString\").unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72239,"byte_end":72297,"line_start":1382,"line_end":1382,"column_start":5,"column_end":63}},{"value":"/ // Convert U16CString to a U16String","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72302,"byte_end":72342,"line_start":1383,"line_end":1383,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72347,"byte_end":72381,"line_start":1384,"line_end":1384,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72386,"byte_end":72389,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ // U16CString will have a terminating nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72394,"byte_end":72439,"line_start":1386,"line_end":1386,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72444,"byte_end":72486,"line_start":1387,"line_end":1387,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72491,"byte_end":72531,"line_start":1388,"line_end":1388,"column_start":5,"column_end":45}},{"value":"/ // The resulting U16String will not have the terminating nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72536,"byte_end":72600,"line_start":1389,"line_end":1389,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72605,"byte_end":72636,"line_start":1390,"line_end":1390,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72641,"byte_end":72679,"line_start":1391,"line_end":1391,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72684,"byte_end":72691,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72696,"byte_end":72699,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72704,"byte_end":72715,"line_start":1394,"line_end":1394,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72720,"byte_end":72751,"line_start":1395,"line_end":1395,"column_start":5,"column_end":36}},{"value":"/ let wcstr = U32CString::from_str(\"MyString\").unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72756,"byte_end":72814,"line_start":1396,"line_end":1396,"column_start":5,"column_end":63}},{"value":"/ // Convert U32CString to a U32String","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72819,"byte_end":72859,"line_start":1397,"line_end":1397,"column_start":5,"column_end":45}},{"value":"/ let wstr = wcstr.to_ustring();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72864,"byte_end":72898,"line_start":1398,"line_end":1398,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72903,"byte_end":72906,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ // U32CString will have a terminating nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72911,"byte_end":72956,"line_start":1400,"line_end":1400,"column_start":5,"column_end":50}},{"value":"/ let wcvec = wcstr.into_vec_with_nul();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":72961,"byte_end":73003,"line_start":1401,"line_end":1401,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(wcvec[wcvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73008,"byte_end":73048,"line_start":1402,"line_end":1402,"column_start":5,"column_end":45}},{"value":"/ // The resulting U32String will not have the terminating nul","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73053,"byte_end":73117,"line_start":1403,"line_end":1403,"column_start":5,"column_end":69}},{"value":"/ let wvec = wstr.into_vec();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73122,"byte_end":73153,"line_start":1404,"line_end":1404,"column_start":5,"column_end":36}},{"value":"/ assert_ne!(wvec[wvec.len()-1], 0);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73158,"byte_end":73196,"line_start":1405,"line_end":1405,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73201,"byte_end":73208,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73430,"byte_end":73438,"line_start":1414,"line_end":1414,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UCStr<C>>::as_slice","value":"fn (&self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string.","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73308,"byte_end":73351,"line_start":1411,"line_end":1411,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73356,"byte_end":73359,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ The slice will **not** include the nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73364,"byte_end":73418,"line_start":1413,"line_end":1413,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73586,"byte_end":73603,"line_start":1419,"line_end":1419,"column_start":12,"column_end":29},"name":"as_slice_with_nul","qualname":"<UCStr<C>>::as_slice_with_nul","value":"fn (&self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string, including the nul terminator.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string, including the nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73501,"byte_end":73574,"line_start":1418,"line_end":1418,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73794,"byte_end":73800,"line_start":1426,"line_end":1426,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UCStr<C>>::as_ptr","value":"fn (&self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the wide string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the wide string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73652,"byte_end":73697,"line_start":1423,"line_end":1423,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73702,"byte_end":73705,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ The pointer is valid only as long as the lifetime of this reference.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73710,"byte_end":73782,"line_start":1425,"line_end":1425,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74004,"byte_end":74007,"line_start":1432,"line_end":1432,"column_start":12,"column_end":15},"name":"len","qualname":"<UCStr<C>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the wide string as number of elements (**not** number of bytes)\n **not** including nul terminator.\n","sig":null,"attributes":[{"value":"/ Returns the length of the wide string as number of elements (**not** number of bytes)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73861,"byte_end":73950,"line_start":1430,"line_end":1430,"column_start":5,"column_end":94}},{"value":"/ **not** including nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":73955,"byte_end":73992,"line_start":1431,"line_end":1431,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74166,"byte_end":74174,"line_start":1437,"line_end":1437,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UCStr<C>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this wide string contains no data (i.e. is only the nul terminator).\n","sig":null,"attributes":[{"value":"/ Returns whether this wide string contains no data (i.e. is only the nul terminator).","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74066,"byte_end":74154,"line_start":1436,"line_end":1436,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74966,"byte_end":74979,"line_start":1462,"line_end":1462,"column_start":12,"column_end":25},"name":"into_ucstring","qualname":"<UCStr<C>>::into_ucstring","value":"fn (self: Box<Self>) -> UCString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UCStr>` into a `UCString` without copying or allocating.","sig":null,"attributes":[{"value":"/ Converts a `Box<UCStr>` into a `UCString` without copying or allocating.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74227,"byte_end":74303,"line_start":1441,"line_end":1441,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74308,"byte_end":74311,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74316,"byte_end":74330,"line_start":1443,"line_end":1443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74335,"byte_end":74338,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74343,"byte_end":74350,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74355,"byte_end":74386,"line_start":1446,"line_end":1446,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74391,"byte_end":74394,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u16, 111u16, 111u16]; // \"foo\"","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74399,"byte_end":74449,"line_start":1448,"line_end":1448,"column_start":5,"column_end":55}},{"value":"/ let c_string = U16CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74454,"byte_end":74509,"line_start":1449,"line_end":1449,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74514,"byte_end":74558,"line_start":1450,"line_end":1450,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U16CString::new(v).unwrap());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74563,"byte_end":74630,"line_start":1451,"line_end":1451,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74635,"byte_end":74642,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74647,"byte_end":74650,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74655,"byte_end":74662,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74667,"byte_end":74698,"line_start":1455,"line_end":1455,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74703,"byte_end":74706,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ let v = vec![102u32, 111u32, 111u32]; // \"foo\"","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74711,"byte_end":74761,"line_start":1457,"line_end":1457,"column_start":5,"column_end":55}},{"value":"/ let c_string = U32CString::new(v.clone()).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74766,"byte_end":74821,"line_start":1458,"line_end":1458,"column_start":5,"column_end":60}},{"value":"/ let boxed = c_string.into_boxed_ucstr();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74826,"byte_end":74870,"line_start":1459,"line_end":1459,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(boxed.into_ucstring(), U32CString::new(v).unwrap());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74875,"byte_end":74942,"line_start":1460,"line_end":1460,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":74947,"byte_end":74954,"line_start":1461,"line_end":1461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75995,"byte_end":76007,"line_start":1494,"line_end":1494,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u16>>::to_os_string","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75269,"byte_end":75318,"line_start":1475,"line_end":1475,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75323,"byte_end":75326,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U16CStr`. Since `U16CStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75331,"byte_end":75424,"line_start":1477,"line_end":1477,"column_start":5,"column_end":98}},{"value":"/ valid UTF-16, there is no guarantee that the resulting `OsString` will be valid data. The","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75429,"byte_end":75522,"line_start":1478,"line_end":1478,"column_start":5,"column_end":98}},{"value":"/ `OsString` will **not** have a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75527,"byte_end":75577,"line_start":1479,"line_end":1479,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75582,"byte_end":75585,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75590,"byte_end":75604,"line_start":1481,"line_end":1481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75609,"byte_end":75612,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75617,"byte_end":75628,"line_start":1483,"line_end":1483,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75633,"byte_end":75664,"line_start":1484,"line_end":1484,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75669,"byte_end":75696,"line_start":1485,"line_end":1485,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75701,"byte_end":75724,"line_start":1486,"line_end":1486,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75729,"byte_end":75772,"line_start":1487,"line_end":1487,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75777,"byte_end":75825,"line_start":1488,"line_end":1488,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75830,"byte_end":75876,"line_start":1489,"line_end":1489,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75881,"byte_end":75917,"line_start":1490,"line_end":1490,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75922,"byte_end":75925,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75930,"byte_end":75971,"line_start":1492,"line_end":1492,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75976,"byte_end":75983,"line_start":1493,"line_end":1493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76645,"byte_end":76654,"line_start":1516,"line_end":1516,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u16>>::to_string","value":"fn (&self) -> Result<String, std::string::FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-16 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76088,"byte_end":76162,"line_start":1498,"line_end":1498,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76167,"byte_end":76170,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76175,"byte_end":76189,"line_start":1500,"line_end":1500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76194,"byte_end":76197,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76202,"byte_end":76270,"line_start":1502,"line_end":1502,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76275,"byte_end":76278,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76283,"byte_end":76297,"line_start":1504,"line_end":1504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76302,"byte_end":76305,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76310,"byte_end":76321,"line_start":1506,"line_end":1506,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76326,"byte_end":76357,"line_start":1507,"line_end":1507,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76362,"byte_end":76385,"line_start":1508,"line_end":1508,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76390,"byte_end":76433,"line_start":1509,"line_end":1509,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76438,"byte_end":76486,"line_start":1510,"line_end":1510,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76491,"byte_end":76542,"line_start":1511,"line_end":1511,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76547,"byte_end":76586,"line_start":1512,"line_end":1512,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76591,"byte_end":76594,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76599,"byte_end":76621,"line_start":1514,"line_end":1514,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76626,"byte_end":76633,"line_start":1515,"line_end":1515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77269,"byte_end":77284,"line_start":1536,"line_end":1536,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u16>>::to_string_lossy","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76766,"byte_end":76807,"line_start":1520,"line_end":1520,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76812,"byte_end":76815,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76820,"byte_end":76897,"line_start":1522,"line_end":1522,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76902,"byte_end":76905,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76910,"byte_end":76924,"line_start":1524,"line_end":1524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76929,"byte_end":76932,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76937,"byte_end":76948,"line_start":1526,"line_end":1526,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76953,"byte_end":76984,"line_start":1527,"line_end":1527,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":76989,"byte_end":77012,"line_start":1528,"line_end":1528,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77017,"byte_end":77060,"line_start":1529,"line_end":1529,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77065,"byte_end":77113,"line_start":1530,"line_end":1530,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77118,"byte_end":77169,"line_start":1531,"line_end":1531,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77174,"byte_end":77210,"line_start":1532,"line_end":1532,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77215,"byte_end":77218,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77223,"byte_end":77245,"line_start":1534,"line_end":1534,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77250,"byte_end":77257,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78372,"byte_end":78389,"line_start":1564,"line_end":1564,"column_start":19,"column_end":36},"name":"from_char_ptr_str","qualname":"<UCStr<u32>>::from_char_ptr_str","value":"fn <'a> (p: *const char) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` nul-terminated string pointer.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` nul-terminated string pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77385,"byte_end":77455,"line_start":1542,"line_end":1542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77460,"byte_end":77463,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ This will scan for nul values beginning with `p`. The first nul value will be used as the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77468,"byte_end":77561,"line_start":1544,"line_end":1544,"column_start":5,"column_end":98}},{"value":"/ nul terminator for the string, similar to how libc string functions such as `strlen` work.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77566,"byte_end":77660,"line_start":1545,"line_end":1545,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77665,"byte_end":77668,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77673,"byte_end":77685,"line_start":1547,"line_end":1547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77690,"byte_end":77693,"line_start":1548,"line_end":1548,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid or has a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77698,"byte_end":77791,"line_start":1549,"line_end":1549,"column_start":5,"column_end":98}},{"value":"/ nul terminator, and the function could scan past the underlying buffer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77796,"byte_end":77871,"line_start":1550,"line_end":1550,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77876,"byte_end":77879,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77884,"byte_end":77909,"line_start":1552,"line_end":1552,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77914,"byte_end":77917,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77922,"byte_end":77934,"line_start":1554,"line_end":1554,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77939,"byte_end":77942,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77947,"byte_end":77987,"line_start":1556,"line_end":1556,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77992,"byte_end":77995,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78000,"byte_end":78012,"line_start":1558,"line_end":1558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78017,"byte_end":78020,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78025,"byte_end":78115,"line_start":1560,"line_end":1560,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78120,"byte_end":78210,"line_start":1561,"line_end":1561,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78215,"byte_end":78310,"line_start":1562,"line_end":1562,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78315,"byte_end":78353,"line_start":1563,"line_end":1563,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79746,"byte_end":79768,"line_start":1595,"line_end":1595,"column_start":19,"column_end":41},"name":"from_char_ptr_with_nul","qualname":"<UCStr<u32>>::from_char_ptr_with_nul","value":"fn <'a> (p: *const char, len: usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78480,"byte_end":78541,"line_start":1568,"line_end":1568,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78546,"byte_end":78549,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes, and does","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78554,"byte_end":78648,"line_start":1570,"line_end":1570,"column_start":5,"column_end":99}},{"value":"/ **not** include the nul terminator of the string. Thus, a `len` of 0 is valid and means that","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78653,"byte_end":78749,"line_start":1571,"line_end":1571,"column_start":5,"column_end":101}},{"value":"/ `p` is a pointer directly to the nul terminator of the string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78754,"byte_end":78820,"line_start":1572,"line_end":1572,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78825,"byte_end":78828,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78833,"byte_end":78845,"line_start":1574,"line_end":1574,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78850,"byte_end":78853,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78858,"byte_end":78952,"line_start":1576,"line_end":1576,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78957,"byte_end":78970,"line_start":1577,"line_end":1577,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78975,"byte_end":78978,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ `p` must be non-null, even for zero `len`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":78983,"byte_end":79029,"line_start":1579,"line_end":1579,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79034,"byte_end":79037,"line_start":1580,"line_end":1580,"column_start":5,"column_end":8}},{"value":"/ The interior values of the pointer are not scanned for nul. Any interior nul values will","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79042,"byte_end":79134,"line_start":1581,"line_end":1581,"column_start":5,"column_end":97}},{"value":"/ result in an invalid `U32CStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79139,"byte_end":79174,"line_start":1582,"line_end":1582,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79179,"byte_end":79182,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79187,"byte_end":79199,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79204,"byte_end":79207,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null or if a nul value is not found at offset `len` of `p`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79212,"byte_end":79306,"line_start":1586,"line_end":1586,"column_start":5,"column_end":99}},{"value":"/ Only pointers with a nul terminator are valid.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79311,"byte_end":79361,"line_start":1587,"line_end":1587,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79366,"byte_end":79369,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79374,"byte_end":79386,"line_start":1589,"line_end":1589,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79391,"byte_end":79394,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79399,"byte_end":79489,"line_start":1591,"line_end":1591,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79494,"byte_end":79584,"line_start":1592,"line_end":1592,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79589,"byte_end":79684,"line_start":1593,"line_end":1593,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79689,"byte_end":79727,"line_start":1594,"line_end":1594,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80278,"byte_end":80302,"line_start":1607,"line_end":1607,"column_start":12,"column_end":36},"name":"from_char_slice_with_nul","qualname":"<UCStr<u32>>::from_char_slice_with_nul","value":"fn (slice: &[char]) -> Result<&Self, MissingNulError<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CStr` from a slice of `char` values that has a nul terminator.","sig":null,"attributes":[{"value":"/ Constructs a `U32CStr` from a slice of `char` values that has a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79881,"byte_end":79964,"line_start":1599,"line_end":1599,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79969,"byte_end":79972,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ The slice will be scanned for nul values. When a nul value is found, it is treated as the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":79977,"byte_end":80070,"line_start":1601,"line_end":1601,"column_start":5,"column_end":98}},{"value":"/ terminator for the string, and the `U32CStr` slice will be truncated to that nul.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80075,"byte_end":80160,"line_start":1602,"line_end":1602,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80165,"byte_end":80168,"line_start":1603,"line_end":1603,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80173,"byte_end":80186,"line_start":1604,"line_end":1604,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80191,"byte_end":80194,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ If there are no no nul values in `slice`, an error is returned.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80199,"byte_end":80266,"line_start":1606,"line_end":1606,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80831,"byte_end":80865,"line_start":1619,"line_end":1619,"column_start":19,"column_end":53},"name":"from_char_slice_with_nul_unchecked","qualname":"<UCStr<u32>>::from_char_slice_with_nul_unchecked","value":"fn (slice: &[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32CStr` from a slice of `char` values that has a nul terminator. No\n checking for nul values is performed.","sig":null,"attributes":[{"value":"/ Constructs a `U32CStr` from a slice of `char` values that has a nul terminator. No","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80440,"byte_end":80526,"line_start":1611,"line_end":1611,"column_start":5,"column_end":91}},{"value":"/ checking for nul values is performed.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80531,"byte_end":80572,"line_start":1612,"line_end":1612,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80577,"byte_end":80580,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80585,"byte_end":80597,"line_start":1614,"line_end":1614,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80602,"byte_end":80605,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can lead to invalid `U32CStr` values when `slice`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80610,"byte_end":80698,"line_start":1616,"line_end":1616,"column_start":5,"column_end":93}},{"value":"/ is missing a terminating nul value or there are non-terminating interior nul values","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80703,"byte_end":80790,"line_start":1617,"line_end":1617,"column_start":5,"column_end":92}},{"value":"/ in the slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80795,"byte_end":80812,"line_start":1618,"line_end":1618,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81698,"byte_end":81710,"line_start":1642,"line_end":1642,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UCStr<u32>>::to_os_string","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":80972,"byte_end":81021,"line_start":1623,"line_end":1623,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81026,"byte_end":81029,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U32CStr`. Since `U32CStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81034,"byte_end":81127,"line_start":1625,"line_end":1625,"column_start":5,"column_end":98}},{"value":"/ valid UTF-32, there is no guarantee that the resulting `OsString` will be valid data. The","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81132,"byte_end":81225,"line_start":1626,"line_end":1626,"column_start":5,"column_end":98}},{"value":"/ `OsString` will **not** have a nul terminator.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81230,"byte_end":81280,"line_start":1627,"line_end":1627,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81285,"byte_end":81288,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81293,"byte_end":81307,"line_start":1629,"line_end":1629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81312,"byte_end":81315,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81320,"byte_end":81331,"line_start":1631,"line_end":1631,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81336,"byte_end":81367,"line_start":1632,"line_end":1632,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81372,"byte_end":81399,"line_start":1633,"line_end":1633,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81404,"byte_end":81427,"line_start":1634,"line_end":1634,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81432,"byte_end":81475,"line_start":1635,"line_end":1635,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81480,"byte_end":81528,"line_start":1636,"line_end":1636,"column_start":5,"column_end":53}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81533,"byte_end":81579,"line_start":1637,"line_end":1637,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81584,"byte_end":81620,"line_start":1638,"line_end":1638,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81625,"byte_end":81628,"line_start":1639,"line_end":1639,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81633,"byte_end":81674,"line_start":1640,"line_end":1640,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81679,"byte_end":81686,"line_start":1641,"line_end":1641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82341,"byte_end":82350,"line_start":1664,"line_end":1664,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UCStr<u32>>::to_string","value":"fn (&self) -> Result<String, FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81784,"byte_end":81858,"line_start":1646,"line_end":1646,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81863,"byte_end":81866,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81871,"byte_end":81885,"line_start":1648,"line_end":1648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81890,"byte_end":81893,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81898,"byte_end":81966,"line_start":1650,"line_end":1650,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81971,"byte_end":81974,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81979,"byte_end":81993,"line_start":1652,"line_end":1652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":81998,"byte_end":82001,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82006,"byte_end":82017,"line_start":1654,"line_end":1654,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82022,"byte_end":82053,"line_start":1655,"line_end":1655,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82058,"byte_end":82081,"line_start":1656,"line_end":1656,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82086,"byte_end":82129,"line_start":1657,"line_end":1657,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82134,"byte_end":82182,"line_start":1658,"line_end":1658,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82187,"byte_end":82238,"line_start":1659,"line_end":1659,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82243,"byte_end":82282,"line_start":1660,"line_end":1660,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82287,"byte_end":82290,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82295,"byte_end":82317,"line_start":1662,"line_end":1662,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82322,"byte_end":82329,"line_start":1663,"line_end":1663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82946,"byte_end":82961,"line_start":1684,"line_end":1684,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UCStr<u32>>::to_string_lossy","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82443,"byte_end":82484,"line_start":1668,"line_end":1668,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82489,"byte_end":82492,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82497,"byte_end":82574,"line_start":1670,"line_end":1670,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82579,"byte_end":82582,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82587,"byte_end":82601,"line_start":1672,"line_end":1672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82606,"byte_end":82609,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82614,"byte_end":82625,"line_start":1674,"line_end":1674,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82630,"byte_end":82661,"line_start":1675,"line_end":1675,"column_start":5,"column_end":36}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82666,"byte_end":82689,"line_start":1676,"line_end":1676,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82694,"byte_end":82737,"line_start":1677,"line_end":1677,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82742,"byte_end":82790,"line_start":1678,"line_end":1678,"column_start":5,"column_end":53}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82795,"byte_end":82846,"line_start":1679,"line_end":1679,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82851,"byte_end":82887,"line_start":1680,"line_end":1680,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82892,"byte_end":82895,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82900,"byte_end":82922,"line_start":1682,"line_end":1682,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":82927,"byte_end":82934,"line_start":1683,"line_end":1683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87362,"byte_end":87374,"line_start":1868,"line_end":1868,"column_start":12,"column_end":24},"name":"nul_position","qualname":"<NulError<C>>::nul_position","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the nul value in the slice that was provided to `U16CString`.\n","sig":null,"attributes":[{"value":"/ Returns the position of the nul value in the slice that was provided to `U16CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87261,"byte_end":87350,"line_start":1867,"line_end":1867,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87555,"byte_end":87563,"line_start":1874,"line_end":1874,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<NulError<C>>::into_vec","value":"fn (self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of u16 values which generated the error\n in the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of u16 values which generated the error","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87419,"byte_end":87515,"line_start":1872,"line_end":1872,"column_start":5,"column_end":101}},{"value":"/ in the first place.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87520,"byte_end":87543,"line_start":1873,"line_end":1873,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88204,"byte_end":88212,"line_start":1900,"line_end":1900,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MissingNulError<C>>::into_vec","value":"fn (self) -> Option<Vec<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this error, returning the underlying vector of `u16` values which generated the\n error in the first place.\n","sig":null,"attributes":[{"value":"/ Consumes this error, returning the underlying vector of `u16` values which generated the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88066,"byte_end":88158,"line_start":1898,"line_end":1898,"column_start":5,"column_end":97}},{"value":"/ error in the first place.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88163,"byte_end":88192,"line_start":1899,"line_end":1899,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90363,"byte_end":90370,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"UString","qualname":"::ustring::UString","value":"UString {  }","parent":null,"children":[{"krate":0,"index":564}],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":88704,"byte_end":88774,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":88775,"byte_end":88778,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `UString` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":88779,"byte_end":88870,"line_start":10,"line_end":10,"column_start":1,"column_end":92}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":88871,"byte_end":88966,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":88967,"byte_end":89065,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89066,"byte_end":89165,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89166,"byte_end":89169,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `UCString` should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89170,"byte_end":89242,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89243,"byte_end":89246,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `UString` can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89247,"byte_end":89338,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89339,"byte_end":89408,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89409,"byte_end":89412,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16String` or `U32String` or `WideString` to using this","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89413,"byte_end":89510,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ type directly.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89511,"byte_end":89529,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89530,"byte_end":89533,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89534,"byte_end":89548,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89549,"byte_end":89552,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16String` and shows how to convert a `U16String` to a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89553,"byte_end":89647,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89648,"byte_end":89674,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89675,"byte_end":89678,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89679,"byte_end":89690,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89691,"byte_end":89721,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89722,"byte_end":89741,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89742,"byte_end":89790,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89791,"byte_end":89829,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89830,"byte_end":89866,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89867,"byte_end":89909,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89910,"byte_end":89943,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89944,"byte_end":89951,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89952,"byte_end":89955,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The same example using `U32String` instead:","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":89956,"byte_end":90003,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90004,"byte_end":90007,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90008,"byte_end":90019,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90020,"byte_end":90050,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90051,"byte_end":90070,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90071,"byte_end":90119,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90120,"byte_end":90158,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90159,"byte_end":90195,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90196,"byte_end":90238,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90239,"byte_end":90272,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90273,"byte_end":90280,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91285,"byte_end":91289,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"UStr","qualname":"::ustring::UStr","value":"UStr {  }","parent":null,"children":[{"krate":0,"index":601}],"decl_id":null,"docs":" String slice reference for `U16String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U16String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90405,"byte_end":90448,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90449,"byte_end":90452,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `UStr` is to `UString` as `str` is to `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90453,"byte_end":90504,"line_start":56,"line_end":56,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90505,"byte_end":90508,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ `UStr` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90509,"byte_end":90597,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/ contain invalid and ill-formed UTF-16 or UTF-32 data. These strings are intended to be used","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90598,"byte_end":90693,"line_start":59,"line_end":59,"column_start":1,"column_end":96}},{"value":"/ with FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90694,"byte_end":90792,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90793,"byte_end":90892,"line_start":61,"line_end":61,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90893,"byte_end":90896,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ `UCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90897,"byte_end":90966,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90967,"byte_end":90970,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ `UStr` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":90971,"byte_end":91068,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91069,"byte_end":91106,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91107,"byte_end":91110,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Please prefer using the type aliases `U16Str` or `U32Str` or `WideStr` to using this type","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91111,"byte_end":91204,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91205,"byte_end":91218,"line_start":69,"line_end":69,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91531,"byte_end":91545,"line_start":79,"line_end":79,"column_start":12,"column_end":26},"name":"FromUtf32Error","qualname":"::ustring::FromUtf32Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error value when converting a String from a UTF-32 byte slice.","sig":null,"attributes":[{"value":"/ A possible error value when converting a String from a UTF-32 byte slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91321,"byte_end":91398,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91399,"byte_end":91402,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This type is the error type for the `to_string` method on `U32Str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91403,"byte_end":91474,"line_start":77,"line_end":77,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91631,"byte_end":91634,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<UString<C>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new empty `UString`.\n","sig":null,"attributes":[{"value":"/ Constructs a new empty `UString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91582,"byte_end":91619,"line_start":82,"line_end":82,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92505,"byte_end":92513,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<UString<C>>::from_vec","value":"fn (raw: impl Into<Vec<C>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UString` from a vector of possibly invalid or ill-formed UTF-16 or UTF-32\n data.","sig":null,"attributes":[{"value":"/ Constructs a `UString` from a vector of possibly invalid or ill-formed UTF-16 or UTF-32","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91689,"byte_end":91780,"line_start":87,"line_end":87,"column_start":5,"column_end":96}},{"value":"/ data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91785,"byte_end":91794,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91799,"byte_end":91802,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91807,"byte_end":91860,"line_start":90,"line_end":90,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91865,"byte_end":91868,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91873,"byte_end":91887,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91892,"byte_end":91895,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91900,"byte_end":91911,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91916,"byte_end":91946,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u16, 104u16, 101u16]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91951,"byte_end":92006,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92011,"byte_end":92040,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92045,"byte_end":92088,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_vec(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92093,"byte_end":92131,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92136,"byte_end":92178,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92183,"byte_end":92190,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92195,"byte_end":92198,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92203,"byte_end":92214,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92219,"byte_end":92249,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/ let v = vec![84u32, 104u32, 101u32]; // 'T' 'h' 'e'","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92254,"byte_end":92309,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/ # let cloned = v.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92314,"byte_end":92343,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92348,"byte_end":92391,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_vec(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92396,"byte_end":92434,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92439,"byte_end":92481,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92486,"byte_end":92493,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93011,"byte_end":93019,"line_start":127,"line_end":127,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UString<C>>::from_ptr","value":"fn (p: *const C, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UString` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UString` from a pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92594,"byte_end":92649,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92654,"byte_end":92657,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92662,"byte_end":92740,"line_start":117,"line_end":117,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92745,"byte_end":92748,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92753,"byte_end":92765,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92770,"byte_end":92773,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92778,"byte_end":92872,"line_start":121,"line_end":121,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92877,"byte_end":92890,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92895,"byte_end":92898,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92903,"byte_end":92915,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92920,"byte_end":92923,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":92928,"byte_end":92992,"line_start":126,"line_end":126,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93490,"byte_end":93503,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<UString<C>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UString` with the given capacity.","sig":null,"attributes":[{"value":"/ Creates a `UString` with the given capacity.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93247,"byte_end":93295,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93300,"byte_end":93303,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The string will be able to hold exactly `capacity` partial code units without reallocating.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93308,"byte_end":93403,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ If `capacity` is set to 0, the string will not initially allocate.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93408,"byte_end":93478,"line_start":139,"line_end":139,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93698,"byte_end":93706,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"capacity","qualname":"<UString<C>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity this `UString` can hold without reallocating.\n","sig":null,"attributes":[{"value":"/ Returns the capacity this `UString` can hold without reallocating.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93616,"byte_end":93686,"line_start":146,"line_end":146,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93820,"byte_end":93825,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"clear","qualname":"<UString<C>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncate the `UString` to zero length.\n","sig":null,"attributes":[{"value":"/ Truncate the `UString` to zero length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93766,"byte_end":93808,"line_start":151,"line_end":151,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94075,"byte_end":94082,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"reserve","qualname":"<UString<C>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the capacity for at least `additional` more capacity to be inserted in the given\n `UString`.","sig":null,"attributes":[{"value":"/ Reserves the capacity for at least `additional` more capacity to be inserted in the given","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93877,"byte_end":93970,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ `UString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93975,"byte_end":93989,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":93994,"byte_end":93997,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ More space may be reserved to avoid frequent allocations.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94002,"byte_end":94063,"line_start":159,"line_end":159,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94553,"byte_end":94566,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<UString<C>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the\n given `UString`. Does nothing if the capcity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more capacity to be inserted in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94165,"byte_end":94259,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"/ given `UString`. Does nothing if the capcity is already sufficient.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94264,"byte_end":94335,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94340,"byte_end":94343,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give more space than is requested. Therefore capacity can not","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94348,"byte_end":94441,"line_start":167,"line_end":167,"column_start":5,"column_end":98}},{"value":"/ be relied upon to be precisely minimal. Prefer `reserve` if future insertions are expected.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94446,"byte_end":94541,"line_start":168,"line_end":168,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94746,"byte_end":94754,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<UString<C>>::into_vec","value":"fn (self) -> Vec<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts the wide string into a `Vec`, consuming the string in the process.\n","sig":null,"attributes":[{"value":"/ Converts the wide string into a `Vec`, consuming the string in the process.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94655,"byte_end":94734,"line_start":173,"line_end":173,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94850,"byte_end":94857,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"as_ustr","qualname":"<UString<C>>::as_ustr","value":"fn (&self) -> &UStr<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts to a `UStr` reference.\n","sig":null,"attributes":[{"value":"/ Converts to a `UStr` reference.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94803,"byte_end":94838,"line_start":178,"line_end":178,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95873,"byte_end":95877,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"push","qualname":"<UString<C>>::push","value":"fn (&mut self, s: impl AsRef<UStr<C>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends the wide string with the given `&UStr`.","sig":null,"attributes":[{"value":"/ Extends the wide string with the given `&UStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94903,"byte_end":94954,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94959,"byte_end":94962,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":94967,"byte_end":95057,"line_start":185,"line_end":185,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95062,"byte_end":95136,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95141,"byte_end":95144,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95149,"byte_end":95163,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95168,"byte_end":95171,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95176,"byte_end":95187,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95192,"byte_end":95222,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95227,"byte_end":95250,"line_start":192,"line_end":192,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95255,"byte_end":95297,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95302,"byte_end":95332,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95337,"byte_end":95398,"line_start":195,"line_end":195,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95403,"byte_end":95425,"line_start":196,"line_end":196,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95430,"byte_end":95433,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95438,"byte_end":95500,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95505,"byte_end":95512,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95517,"byte_end":95520,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95525,"byte_end":95536,"line_start":201,"line_end":201,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95541,"byte_end":95571,"line_start":202,"line_end":202,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95576,"byte_end":95599,"line_start":203,"line_end":203,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95604,"byte_end":95646,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95651,"byte_end":95681,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95686,"byte_end":95747,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ wstr.push(cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95752,"byte_end":95774,"line_start":207,"line_end":207,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95779,"byte_end":95782,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95787,"byte_end":95849,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95854,"byte_end":95861,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96962,"byte_end":96972,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"push_slice","qualname":"<UString<C>>::push_slice","value":"fn (&mut self, s: impl AsRef<[C]>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends the wide string with the given slice.","sig":null,"attributes":[{"value":"/ Extends the wide string with the given slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":95982,"byte_end":96031,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96036,"byte_end":96039,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96044,"byte_end":96134,"line_start":217,"line_end":217,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96139,"byte_end":96213,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96218,"byte_end":96221,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96226,"byte_end":96240,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96245,"byte_end":96248,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96253,"byte_end":96264,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96269,"byte_end":96299,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96304,"byte_end":96327,"line_start":224,"line_end":224,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96332,"byte_end":96374,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96379,"byte_end":96409,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96414,"byte_end":96475,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96480,"byte_end":96508,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96513,"byte_end":96516,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96521,"byte_end":96583,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96588,"byte_end":96595,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96600,"byte_end":96603,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96608,"byte_end":96619,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96624,"byte_end":96654,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96659,"byte_end":96682,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96687,"byte_end":96729,"line_start":236,"line_end":236,"column_start":5,"column_end":47}},{"value":"/ let cloned = wstr.clone();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96734,"byte_end":96764,"line_start":237,"line_end":237,"column_start":5,"column_end":35}},{"value":"/ // Push the clone to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96769,"byte_end":96830,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/ wstr.push_slice(cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96835,"byte_end":96863,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96868,"byte_end":96871,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96876,"byte_end":96938,"line_start":241,"line_end":241,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":96943,"byte_end":96950,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97706,"byte_end":97719,"line_start":274,"line_end":274,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<UString<C>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the `UString` to match its length.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the `UString` to match its length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97067,"byte_end":97129,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97134,"byte_end":97137,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97142,"byte_end":97156,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97161,"byte_end":97164,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97169,"byte_end":97180,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97185,"byte_end":97215,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97220,"byte_end":97223,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let mut s = U16String::from_str(\"foo\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97228,"byte_end":97271,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97276,"byte_end":97279,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97284,"byte_end":97303,"line_start":256,"line_end":256,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97308,"byte_end":97341,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97346,"byte_end":97349,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97354,"byte_end":97376,"line_start":259,"line_end":259,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97381,"byte_end":97413,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97418,"byte_end":97425,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97430,"byte_end":97433,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97438,"byte_end":97449,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97454,"byte_end":97484,"line_start":264,"line_end":264,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97489,"byte_end":97492,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ let mut s = U32String::from_str(\"foo\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97497,"byte_end":97540,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97545,"byte_end":97548,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ s.reserve(100);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97553,"byte_end":97572,"line_start":268,"line_end":268,"column_start":5,"column_end":24}},{"value":"/ assert!(s.capacity() >= 100);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97577,"byte_end":97610,"line_start":269,"line_end":269,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97615,"byte_end":97618,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ s.shrink_to_fit();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97623,"byte_end":97645,"line_start":271,"line_end":271,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(3, s.capacity());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97650,"byte_end":97682,"line_start":272,"line_end":272,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97687,"byte_end":97694,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98245,"byte_end":98260,"line_start":297,"line_end":297,"column_start":12,"column_end":27},"name":"into_boxed_ustr","qualname":"<UString<C>>::into_boxed_ustr","value":"fn (self) -> Box<UStr<C>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `UString` into a boxed `UStr`.","sig":null,"attributes":[{"value":"/ Converts this `UString` into a boxed `UStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97780,"byte_end":97828,"line_start":278,"line_end":278,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97833,"byte_end":97836,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97841,"byte_end":97855,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97860,"byte_end":97863,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97868,"byte_end":97875,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U16String, U16Str};","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97880,"byte_end":97920,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97925,"byte_end":97928,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let s = U16String::from_str(\"hello\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97933,"byte_end":97974,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97979,"byte_end":97982,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U16Str> = s.into_boxed_ustr();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":97987,"byte_end":98032,"line_start":287,"line_end":287,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98037,"byte_end":98044,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98049,"byte_end":98052,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98057,"byte_end":98064,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use widestring::{U32String, U32Str};","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98069,"byte_end":98109,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98114,"byte_end":98117,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let s = U32String::from_str(\"hello\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98122,"byte_end":98163,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98168,"byte_end":98171,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let b: Box<U32Str> = s.into_boxed_ustr();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98176,"byte_end":98221,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98226,"byte_end":98233,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98926,"byte_end":98934,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u16>>::from_str","value":"fn <S> (s: &S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U16String` copy from a `str`.","sig":null,"attributes":[{"value":"/ Encodes a `U16String` copy from a `str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98434,"byte_end":98478,"line_start":304,"line_end":304,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98483,"byte_end":98486,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `str`. Since `str` will always be valid UTF-8, the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98491,"byte_end":98582,"line_start":306,"line_end":306,"column_start":5,"column_end":96}},{"value":"/ resulting `U16String` will also be valid UTF-16.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98587,"byte_end":98639,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98644,"byte_end":98647,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98652,"byte_end":98666,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98671,"byte_end":98674,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98679,"byte_end":98690,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98695,"byte_end":98725,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98730,"byte_end":98753,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98758,"byte_end":98801,"line_start":314,"line_end":314,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98806,"byte_end":98844,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98849,"byte_end":98852,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98857,"byte_end":98902,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98907,"byte_end":98914,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99607,"byte_end":99618,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u16>>::from_os_str","value":"fn <S> (s: &S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U16String` copy from an `OsStr`.","sig":null,"attributes":[{"value":"/ Encodes a `U16String` copy from an `OsStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99068,"byte_end":99115,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99120,"byte_end":99123,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `OsStr`. Since `OsStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99128,"byte_end":99222,"line_start":327,"line_end":327,"column_start":5,"column_end":99}},{"value":"/ valid data, there is no guarantee that the resulting `U16String` will be valid UTF-16.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99227,"byte_end":99317,"line_start":328,"line_end":328,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99322,"byte_end":99325,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99330,"byte_end":99344,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99349,"byte_end":99352,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99357,"byte_end":99368,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99373,"byte_end":99403,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99408,"byte_end":99431,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99436,"byte_end":99479,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_os_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99484,"byte_end":99525,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99530,"byte_end":99533,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99538,"byte_end":99583,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99588,"byte_end":99595,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100333,"byte_end":100341,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u16>>::push_str","value":"fn (&mut self, s: impl AsRef<str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&str`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99751,"byte_end":99796,"line_start":346,"line_end":346,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99801,"byte_end":99804,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99809,"byte_end":99899,"line_start":348,"line_end":348,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99904,"byte_end":99978,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99983,"byte_end":99986,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":99991,"byte_end":100005,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100010,"byte_end":100013,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100018,"byte_end":100029,"line_start":353,"line_end":353,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100034,"byte_end":100064,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100069,"byte_end":100092,"line_start":355,"line_end":355,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100097,"byte_end":100139,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100144,"byte_end":100208,"line_start":357,"line_end":357,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100213,"byte_end":100234,"line_start":358,"line_end":358,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100239,"byte_end":100242,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100247,"byte_end":100309,"line_start":360,"line_end":360,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100314,"byte_end":100321,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101026,"byte_end":101037,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u16>>::push_os_str","value":"fn (&mut self, s: impl AsRef<OsStr>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&OsStr`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&OsStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100439,"byte_end":100486,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100491,"byte_end":100494,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100499,"byte_end":100589,"line_start":368,"line_end":368,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100594,"byte_end":100668,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100673,"byte_end":100676,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100681,"byte_end":100695,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100700,"byte_end":100703,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100708,"byte_end":100719,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100724,"byte_end":100754,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100759,"byte_end":100782,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100787,"byte_end":100829,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100834,"byte_end":100898,"line_start":377,"line_end":377,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100903,"byte_end":100927,"line_start":378,"line_end":378,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100932,"byte_end":100935,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":100940,"byte_end":101002,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101007,"byte_end":101014,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101665,"byte_end":101675,"line_start":402,"line_end":402,"column_start":12,"column_end":22},"name":"from_chars","qualname":"<UString<u32>>::from_chars","value":"fn (raw: impl Into<Vec<char>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32String` from a vector of UTF-32 data.","sig":null,"attributes":[{"value":"/ Constructs a `U32String` from a vector of UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101166,"byte_end":101224,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101229,"byte_end":101232,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ No checks are made on the contents of the vector.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101237,"byte_end":101290,"line_start":390,"line_end":390,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101295,"byte_end":101298,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101303,"byte_end":101317,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101322,"byte_end":101325,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101330,"byte_end":101341,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101346,"byte_end":101376,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ let v: Vec<char> = \"Test\".chars().collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101381,"byte_end":101429,"line_start":396,"line_end":396,"column_start":5,"column_end":53}},{"value":"/ # let cloned: Vec<u32> = v.iter().map(|&c| c as u32).collect();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101434,"byte_end":101501,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/ // Create a wide string from the vector","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101506,"byte_end":101549,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_chars(v);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101554,"byte_end":101594,"line_start":399,"line_end":399,"column_start":5,"column_end":45}},{"value":"/ # assert_eq!(wstr.into_vec(), cloned);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101599,"byte_end":101641,"line_start":400,"line_end":400,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101646,"byte_end":101653,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102302,"byte_end":102310,"line_start":423,"line_end":423,"column_start":12,"column_end":20},"name":"from_str","qualname":"<UString<u32>>::from_str","value":"fn <S> (s: &S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U32String` copy from a `str`.","sig":null,"attributes":[{"value":"/ Encodes a `U32String` copy from a `str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101810,"byte_end":101854,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101859,"byte_end":101862,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `str`. Since `str` will always be valid UTF-8, the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101867,"byte_end":101958,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ resulting `U32String` will also be valid UTF-32.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101963,"byte_end":102015,"line_start":411,"line_end":411,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102020,"byte_end":102023,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102028,"byte_end":102042,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102047,"byte_end":102050,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102055,"byte_end":102066,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102071,"byte_end":102101,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102106,"byte_end":102129,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102134,"byte_end":102177,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102182,"byte_end":102220,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102225,"byte_end":102228,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102233,"byte_end":102278,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102283,"byte_end":102290,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102990,"byte_end":103001,"line_start":443,"line_end":443,"column_start":12,"column_end":23},"name":"from_os_str","qualname":"<UString<u32>>::from_os_str","value":"fn <S> (s: &S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encodes a `U32String` copy from an `OsStr`.","sig":null,"attributes":[{"value":"/ Encodes a `U32String` copy from an `OsStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102451,"byte_end":102498,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102503,"byte_end":102506,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This makes a wide string copy of the `OsStr`. Since `OsStr` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102511,"byte_end":102605,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ valid data, there is no guarantee that the resulting `U32String` will be valid UTF-32.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102610,"byte_end":102700,"line_start":431,"line_end":431,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102705,"byte_end":102708,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102713,"byte_end":102727,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102732,"byte_end":102735,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102740,"byte_end":102751,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102756,"byte_end":102786,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102791,"byte_end":102814,"line_start":437,"line_end":437,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102819,"byte_end":102862,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_os_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102867,"byte_end":102908,"line_start":439,"line_end":439,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102913,"byte_end":102916,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102921,"byte_end":102966,"line_start":441,"line_end":441,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":102971,"byte_end":102978,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103595,"byte_end":103608,"line_start":460,"line_end":460,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UString<u32>>::from_char_ptr","value":"fn (p: *const char, len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32String` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32String` from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103162,"byte_end":103226,"line_start":448,"line_end":448,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103231,"byte_end":103234,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103239,"byte_end":103324,"line_start":450,"line_end":450,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103329,"byte_end":103332,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103337,"byte_end":103349,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103354,"byte_end":103357,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103362,"byte_end":103456,"line_start":454,"line_end":454,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103461,"byte_end":103474,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103479,"byte_end":103482,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103487,"byte_end":103499,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103504,"byte_end":103507,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Panics if `len` is greater than 0 but `p` is a null pointer.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103512,"byte_end":103576,"line_start":459,"line_end":459,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104288,"byte_end":104296,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"push_str","qualname":"<UString<u32>>::push_str","value":"fn (&mut self, s: impl AsRef<str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&str`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&str`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103706,"byte_end":103751,"line_start":464,"line_end":464,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103756,"byte_end":103759,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103764,"byte_end":103854,"line_start":466,"line_end":466,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103859,"byte_end":103933,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103938,"byte_end":103941,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103946,"byte_end":103960,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103965,"byte_end":103968,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103973,"byte_end":103984,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":103989,"byte_end":104019,"line_start":472,"line_end":472,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104024,"byte_end":104047,"line_start":473,"line_end":473,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104052,"byte_end":104094,"line_start":474,"line_end":474,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104099,"byte_end":104163,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ wstr.push_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104168,"byte_end":104189,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104194,"byte_end":104197,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104202,"byte_end":104264,"line_start":478,"line_end":478,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104269,"byte_end":104276,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104992,"byte_end":105003,"line_start":500,"line_end":500,"column_start":12,"column_end":23},"name":"push_os_str","qualname":"<UString<u32>>::push_os_str","value":"fn (&mut self, s: impl AsRef<OsStr>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends the string with the given `&OsStr`.","sig":null,"attributes":[{"value":"/ Extends the string with the given `&OsStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104405,"byte_end":104452,"line_start":484,"line_end":484,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104457,"byte_end":104460,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the strings. It is possible to end up nul values inside the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104465,"byte_end":104555,"line_start":486,"line_end":486,"column_start":5,"column_end":95}},{"value":"/ string, and it is up to the caller to determine if that is acceptable.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104560,"byte_end":104634,"line_start":487,"line_end":487,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104639,"byte_end":104642,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104647,"byte_end":104661,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104666,"byte_end":104669,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104674,"byte_end":104685,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104690,"byte_end":104720,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104725,"byte_end":104748,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ let mut wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104753,"byte_end":104795,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ // Push the original to the end, repeating the string twice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104800,"byte_end":104864,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/ wstr.push_os_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104869,"byte_end":104893,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104898,"byte_end":104901,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(wstr.to_string().unwrap(), \"MyStringMyString\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104906,"byte_end":104968,"line_start":498,"line_end":498,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":104973,"byte_end":104980,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105218,"byte_end":105221,"line_start":508,"line_end":508,"column_start":12,"column_end":15},"name":"new","qualname":"<UStr<C>>::new","value":"fn <S> (s: &S) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Coerces a value into a `UStr`.\n","sig":null,"attributes":[{"value":"/ Coerces a value into a `UStr`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105172,"byte_end":105206,"line_start":507,"line_end":507,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106051,"byte_end":106059,"line_start":531,"line_end":531,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<UStr<C>>::from_ptr","value":"fn <'a> (p: *const C, len: usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105295,"byte_end":105347,"line_start":512,"line_end":512,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105352,"byte_end":105355,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105360,"byte_end":105438,"line_start":514,"line_end":514,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105443,"byte_end":105446,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105451,"byte_end":105463,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105468,"byte_end":105471,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105476,"byte_end":105570,"line_start":518,"line_end":518,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105575,"byte_end":105588,"line_start":519,"line_end":519,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105593,"byte_end":105596,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105601,"byte_end":105613,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105618,"byte_end":105621,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105626,"byte_end":105666,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105671,"byte_end":105674,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105679,"byte_end":105691,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105696,"byte_end":105699,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105704,"byte_end":105794,"line_start":527,"line_end":527,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105799,"byte_end":105889,"line_start":528,"line_end":528,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105894,"byte_end":105989,"line_start":529,"line_end":529,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105994,"byte_end":106032,"line_start":530,"line_end":530,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106322,"byte_end":106332,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<UStr<C>>::from_slice","value":"fn (slice: &[C]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `UStr` from a slice of code points.","sig":null,"attributes":[{"value":"/ Constructs a `UStr` from a slice of code points.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106204,"byte_end":106256,"line_start":536,"line_end":536,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106261,"byte_end":106264,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106269,"byte_end":106310,"line_start":538,"line_end":538,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106473,"byte_end":106483,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"to_ustring","qualname":"<UStr<C>>::to_ustring","value":"fn (&self) -> UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a new owned `UString`.\n","sig":null,"attributes":[{"value":"/ Copies the wide string to a new owned `UString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106409,"byte_end":106461,"line_start":543,"line_end":543,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106612,"byte_end":106620,"line_start":549,"line_end":549,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<UStr<C>>::as_slice","value":"fn (&self) -> &[C]","parent":null,"children":[],"decl_id":null,"docs":" Converts to a slice of the wide string.\n","sig":null,"attributes":[{"value":"/ Converts to a slice of the wide string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106557,"byte_end":106600,"line_start":548,"line_end":548,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106811,"byte_end":106817,"line_start":556,"line_end":556,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<UStr<C>>::as_ptr","value":"fn (&self) -> *const C","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the wide string.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the wide string.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106669,"byte_end":106714,"line_start":553,"line_end":553,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106719,"byte_end":106722,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ The pointer is valid only as long as the lifetime of this reference.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106727,"byte_end":106799,"line_start":555,"line_end":555,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106980,"byte_end":106983,"line_start":561,"line_end":561,"column_start":12,"column_end":15},"name":"len","qualname":"<UStr<C>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the wide string as number of elements (**not** number of bytes).\n","sig":null,"attributes":[{"value":"/ Returns the length of the wide string as number of elements (**not** number of bytes).","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":106878,"byte_end":106968,"line_start":560,"line_end":560,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107104,"byte_end":107112,"line_start":566,"line_end":566,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UStr<C>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this wide string contains no data.\n","sig":null,"attributes":[{"value":"/ Returns whether this wide string contains no data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107038,"byte_end":107092,"line_start":565,"line_end":565,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107257,"byte_end":107269,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"into_ustring","qualname":"<UStr<C>>::into_ustring","value":"fn (self: Box<Self>) -> UString<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<UStr>` into a `UString` without copying or allocating.\n","sig":null,"attributes":[{"value":"/ Converts a `Box<UStr>` into a `UString` without copying or allocating.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107171,"byte_end":107245,"line_start":570,"line_end":570,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108131,"byte_end":108143,"line_start":598,"line_end":598,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u16>>::to_os_string","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107477,"byte_end":107526,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107531,"byte_end":107534,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U16Str`. Since `U16Str` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107539,"byte_end":107630,"line_start":582,"line_end":582,"column_start":5,"column_end":96}},{"value":"/ valid UTF-16, there is no guarantee that the resulting `OsString` will be valid data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107635,"byte_end":107724,"line_start":583,"line_end":583,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107729,"byte_end":107732,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107737,"byte_end":107751,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107756,"byte_end":107759,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107764,"byte_end":107775,"line_start":587,"line_end":587,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107780,"byte_end":107810,"line_start":588,"line_end":588,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107815,"byte_end":107842,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107847,"byte_end":107870,"line_start":590,"line_end":590,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107875,"byte_end":107918,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107923,"byte_end":107961,"line_start":592,"line_end":592,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107966,"byte_end":108012,"line_start":593,"line_end":593,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108017,"byte_end":108053,"line_start":594,"line_end":594,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108058,"byte_end":108061,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108066,"byte_end":108107,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108112,"byte_end":108119,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108766,"byte_end":108775,"line_start":620,"line_end":620,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u16>>::to_string","value":"fn (&self) -> Result<String, std::string::FromUtf16Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-16 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-16 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108220,"byte_end":108294,"line_start":602,"line_end":602,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108299,"byte_end":108302,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108307,"byte_end":108321,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108326,"byte_end":108329,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-16 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108334,"byte_end":108402,"line_start":606,"line_end":606,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108407,"byte_end":108410,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108415,"byte_end":108429,"line_start":608,"line_end":608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108434,"byte_end":108437,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108442,"byte_end":108453,"line_start":610,"line_end":610,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108458,"byte_end":108488,"line_start":611,"line_end":611,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108493,"byte_end":108516,"line_start":612,"line_end":612,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108521,"byte_end":108564,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108569,"byte_end":108607,"line_start":614,"line_end":614,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108612,"byte_end":108663,"line_start":615,"line_end":615,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108668,"byte_end":108707,"line_start":616,"line_end":616,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108712,"byte_end":108715,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108720,"byte_end":108742,"line_start":618,"line_end":618,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108747,"byte_end":108754,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109383,"byte_end":109398,"line_start":640,"line_end":640,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u16>>::to_string_lossy","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108883,"byte_end":108924,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108929,"byte_end":108932,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with *U+FFFD REPLACEMENT CHARACTER*.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":108937,"byte_end":109016,"line_start":626,"line_end":626,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109021,"byte_end":109024,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109029,"byte_end":109043,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109048,"byte_end":109051,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109056,"byte_end":109067,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109072,"byte_end":109102,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109107,"byte_end":109130,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109135,"byte_end":109178,"line_start":633,"line_end":633,"column_start":5,"column_end":48}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109183,"byte_end":109221,"line_start":634,"line_end":634,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109226,"byte_end":109277,"line_start":635,"line_end":635,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109282,"byte_end":109321,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109326,"byte_end":109329,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109334,"byte_end":109359,"line_start":638,"line_end":638,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109364,"byte_end":109371,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110266,"byte_end":110279,"line_start":665,"line_end":665,"column_start":19,"column_end":32},"name":"from_char_ptr","qualname":"<UStr<u32>>::from_char_ptr","value":"fn <'a> (p: *const char, len: usize) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a `char` pointer and a length.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a `char` pointer and a length.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109494,"byte_end":109555,"line_start":646,"line_end":646,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109560,"byte_end":109563,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The `len` argument is the number of `char` elements, **not** the number of bytes.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109568,"byte_end":109653,"line_start":648,"line_end":648,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109658,"byte_end":109661,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109666,"byte_end":109678,"line_start":650,"line_end":650,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109683,"byte_end":109686,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as there is no guarantee that the given pointer is valid for `len`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109691,"byte_end":109785,"line_start":652,"line_end":652,"column_start":5,"column_end":99}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109790,"byte_end":109803,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109808,"byte_end":109811,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109816,"byte_end":109828,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109833,"byte_end":109836,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This function panics if `p` is null.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109841,"byte_end":109881,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109886,"byte_end":109889,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Caveat","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109894,"byte_end":109906,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109911,"byte_end":109914,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ The lifetime for the returned string is inferred from its usage. To prevent accidental","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109919,"byte_end":110009,"line_start":661,"line_end":661,"column_start":5,"column_end":95}},{"value":"/ misuse, it's suggested to tie the lifetime to whichever source lifetime is safe in the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110014,"byte_end":110104,"line_start":662,"line_end":662,"column_start":5,"column_end":95}},{"value":"/ context, such as by providing a helper function taking the lifetime of a host value for the","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110109,"byte_end":110204,"line_start":663,"line_end":663,"column_start":5,"column_end":100}},{"value":"/ string, or by explicit annotation.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110209,"byte_end":110247,"line_start":664,"line_end":664,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110508,"byte_end":110523,"line_start":672,"line_end":672,"column_start":12,"column_end":27},"name":"from_char_slice","qualname":"<UStr<u32>>::from_char_slice","value":"fn (slice: &[char]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `U32Str` from a slice of `u32` code points.","sig":null,"attributes":[{"value":"/ Constructs a `U32Str` from a slice of `u32` code points.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110382,"byte_end":110442,"line_start":669,"line_end":669,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110447,"byte_end":110450,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ No checks are performed on the slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110455,"byte_end":110496,"line_start":671,"line_end":671,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111257,"byte_end":111269,"line_start":694,"line_end":694,"column_start":12,"column_end":24},"name":"to_os_string","qualname":"<UStr<u32>>::to_os_string","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Decodes a wide string to an owned `OsString`.","sig":null,"attributes":[{"value":"/ Decodes a wide string to an owned `OsString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110603,"byte_end":110652,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110657,"byte_end":110660,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This makes a string copy of the `U32Str`. Since `U32Str` makes no guarantees that it is","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110665,"byte_end":110756,"line_start":678,"line_end":678,"column_start":5,"column_end":96}},{"value":"/ valid UTF-32, there is no guarantee that the resulting `OsString` will be valid data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110761,"byte_end":110850,"line_start":679,"line_end":679,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110855,"byte_end":110858,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110863,"byte_end":110877,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110882,"byte_end":110885,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110890,"byte_end":110901,"line_start":683,"line_end":683,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110906,"byte_end":110936,"line_start":684,"line_end":684,"column_start":5,"column_end":35}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110941,"byte_end":110968,"line_start":685,"line_end":685,"column_start":5,"column_end":32}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":110973,"byte_end":110996,"line_start":686,"line_end":686,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111001,"byte_end":111044,"line_start":687,"line_end":687,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111049,"byte_end":111087,"line_start":688,"line_end":688,"column_start":5,"column_end":43}},{"value":"/ // Create an OsString from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111092,"byte_end":111138,"line_start":689,"line_end":689,"column_start":5,"column_end":51}},{"value":"/ let osstr = wstr.to_os_string();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111143,"byte_end":111179,"line_start":690,"line_end":690,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111184,"byte_end":111187,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(osstr, OsString::from(s));","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111192,"byte_end":111233,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111238,"byte_end":111245,"line_start":693,"line_end":693,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111886,"byte_end":111895,"line_start":716,"line_end":716,"column_start":12,"column_end":21},"name":"to_string","qualname":"<UStr<u32>>::to_string","value":"fn (&self) -> Result<String, FromUtf32Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String` if it contains valid UTF-32 data.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String` if it contains valid UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111340,"byte_end":111414,"line_start":698,"line_end":698,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111419,"byte_end":111422,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Failures","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111427,"byte_end":111441,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111446,"byte_end":111449,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the string contains any invalid UTF-32 data.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111454,"byte_end":111522,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111527,"byte_end":111530,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111535,"byte_end":111549,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111554,"byte_end":111557,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111562,"byte_end":111573,"line_start":706,"line_end":706,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111578,"byte_end":111608,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111613,"byte_end":111636,"line_start":708,"line_end":708,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111641,"byte_end":111684,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111689,"byte_end":111727,"line_start":710,"line_end":710,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111732,"byte_end":111783,"line_start":711,"line_end":711,"column_start":5,"column_end":56}},{"value":"/ let s2 = wstr.to_string().unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111788,"byte_end":111827,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111832,"byte_end":111835,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s2, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111840,"byte_end":111862,"line_start":714,"line_end":714,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":111867,"byte_end":111874,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113023,"byte_end":113038,"line_start":748,"line_end":748,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<UStr<u32>>::to_string_lossy","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Copies the wide string to a `String`.","sig":null,"attributes":[{"value":"/ Copies the wide string to a `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112523,"byte_end":112564,"line_start":732,"line_end":732,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112569,"byte_end":112572,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with *U+FFFD REPLACEMENT CHARACTER*.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112577,"byte_end":112656,"line_start":734,"line_end":734,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112661,"byte_end":112664,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112669,"byte_end":112683,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112688,"byte_end":112691,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112696,"byte_end":112707,"line_start":738,"line_end":738,"column_start":5,"column_end":16}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112712,"byte_end":112742,"line_start":739,"line_end":739,"column_start":5,"column_end":35}},{"value":"/ let s = \"MyString\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112747,"byte_end":112770,"line_start":740,"line_end":740,"column_start":5,"column_end":28}},{"value":"/ // Create a wide string from the string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112775,"byte_end":112818,"line_start":741,"line_end":741,"column_start":5,"column_end":48}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112823,"byte_end":112861,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/ // Create a regular string from the wide string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112866,"byte_end":112917,"line_start":743,"line_end":743,"column_start":5,"column_end":56}},{"value":"/ let lossy = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112922,"byte_end":112961,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112966,"byte_end":112969,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lossy, s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":112974,"byte_end":112999,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113004,"byte_end":113011,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10082,"byte_end":10087,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"name":"UChar","qualname":"::UChar","value":"UChar: Debug + Sized + Copy + Ord + Eq","parent":null,"children":[{"krate":0,"index":436}],"decl_id":null,"docs":" Marker trait for primitive types used to represent UTF character data. Should not be used\n directly.\n","sig":null,"attributes":[{"value":"/ Marker trait for primitive types used to represent UTF character data. Should not be used","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":9964,"byte_end":10057,"line_start":193,"line_end":193,"column_start":1,"column_end":94}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10058,"byte_end":10071,"line_start":194,"line_end":194,"column_start":1,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10161,"byte_end":10164,"line_start":197,"line_end":197,"column_start":11,"column_end":14},"name":"NUL","qualname":"::UChar::NUL","value":"Self","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" NUL character value\n","sig":null,"attributes":[{"value":"/ NUL character value","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10127,"byte_end":10150,"line_start":196,"line_end":196,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10983,"byte_end":10989,"line_start":221,"line_end":221,"column_start":10,"column_end":16},"name":"U16Str","qualname":"::U16Str","value":"UStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for `U16String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U16String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10271,"byte_end":10314,"line_start":208,"line_end":208,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10315,"byte_end":10318,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ `U16Str` is to `U16String` as `str` is to `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10319,"byte_end":10374,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10375,"byte_end":10378,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ `U16Str` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10379,"byte_end":10469,"line_start":212,"line_end":212,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10470,"byte_end":10560,"line_start":213,"line_end":213,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10561,"byte_end":10654,"line_start":214,"line_end":214,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10655,"byte_end":10754,"line_start":215,"line_end":215,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10755,"byte_end":10758,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ `WideCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10759,"byte_end":10831,"line_start":217,"line_end":217,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10832,"byte_end":10835,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ `U16Str` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10836,"byte_end":10935,"line_start":219,"line_end":219,"column_start":1,"column_end":100}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10936,"byte_end":10973,"line_start":220,"line_end":220,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12137,"byte_end":12146,"line_start":249,"line_end":249,"column_start":10,"column_end":19},"name":"U16String","qualname":"::U16String","value":"UString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable \"wide\" string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11004,"byte_end":11074,"line_start":223,"line_end":223,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11075,"byte_end":11078,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ `U16String` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11079,"byte_end":11172,"line_start":225,"line_end":225,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-16 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11173,"byte_end":11263,"line_start":226,"line_end":226,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11264,"byte_end":11357,"line_start":227,"line_end":227,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11358,"byte_end":11457,"line_start":228,"line_end":228,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11458,"byte_end":11461,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ `WideCString` should be used instead if nul-aware strings are required.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11462,"byte_end":11537,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11538,"byte_end":11541,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ `U16String` can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11542,"byte_end":11635,"line_start":232,"line_end":232,"column_start":1,"column_end":94}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11636,"byte_end":11705,"line_start":233,"line_end":233,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11706,"byte_end":11709,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11710,"byte_end":11724,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11725,"byte_end":11728,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16String` and shows how to convert a `U16String` to a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11729,"byte_end":11823,"line_start":237,"line_end":237,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11824,"byte_end":11850,"line_start":238,"line_end":238,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11851,"byte_end":11854,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11855,"byte_end":11866,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11867,"byte_end":11897,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11898,"byte_end":11917,"line_start":242,"line_end":242,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11918,"byte_end":11966,"line_start":243,"line_end":243,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":11967,"byte_end":12005,"line_start":244,"line_end":244,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12006,"byte_end":12042,"line_start":245,"line_end":245,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12043,"byte_end":12085,"line_start":246,"line_end":246,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12086,"byte_end":12119,"line_start":247,"line_end":247,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12120,"byte_end":12127,"line_start":248,"line_end":248,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12776,"byte_end":12783,"line_start":260,"line_end":260,"column_start":10,"column_end":17},"name":"U16CStr","qualname":"::U16CStr","value":"UCStr<u16>","parent":null,"children":[],"decl_id":null,"docs":" C-style wide string reference for `U16CString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `U16CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12164,"byte_end":12215,"line_start":251,"line_end":251,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12216,"byte_end":12219,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ `U16CStr` is aware of nul values. Unless unchecked conversions are used, all `U16CStr`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12220,"byte_end":12310,"line_start":253,"line_end":253,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12311,"byte_end":12409,"line_start":254,"line_end":254,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12410,"byte_end":12508,"line_start":255,"line_end":255,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12509,"byte_end":12600,"line_start":256,"line_end":256,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12601,"byte_end":12604,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `U16CStr` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12605,"byte_end":12695,"line_start":258,"line_end":258,"column_start":1,"column_end":91}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12696,"byte_end":12766,"line_start":259,"line_end":259,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13893,"byte_end":13903,"line_start":286,"line_end":286,"column_start":10,"column_end":20},"name":"U16CString","qualname":"::U16CString","value":"UCString<u16>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style \"wide\" string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12799,"byte_end":12888,"line_start":262,"line_end":262,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12889,"byte_end":12892,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ `U16CString` is aware of nul values. Unless unchecked conversions are used, all `U16CString`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12893,"byte_end":12989,"line_start":264,"line_end":264,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":12990,"byte_end":13088,"line_start":265,"line_end":265,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-16 data. These strings are intended to","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13089,"byte_end":13187,"line_start":266,"line_end":266,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13188,"byte_end":13279,"line_start":267,"line_end":267,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13280,"byte_end":13283,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ `U16CString` can be converted to and from many other string types, including `U16String`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13284,"byte_end":13377,"line_start":269,"line_end":269,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13378,"byte_end":13448,"line_start":270,"line_end":270,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13449,"byte_end":13452,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13453,"byte_end":13467,"line_start":272,"line_end":272,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13468,"byte_end":13471,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U16CString` and shows how to convert a `U16CString` to a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13472,"byte_end":13568,"line_start":274,"line_end":274,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13569,"byte_end":13595,"line_start":275,"line_end":275,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13596,"byte_end":13599,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13600,"byte_end":13611,"line_start":277,"line_end":277,"column_start":1,"column_end":12}},{"value":"/ use widestring::U16CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13612,"byte_end":13643,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13644,"byte_end":13663,"line_start":279,"line_end":279,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13664,"byte_end":13712,"line_start":280,"line_end":280,"column_start":1,"column_end":49}},{"value":"/ let wstr = U16CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13713,"byte_end":13761,"line_start":281,"line_end":281,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13762,"byte_end":13798,"line_start":282,"line_end":282,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13799,"byte_end":13841,"line_start":283,"line_end":283,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13842,"byte_end":13875,"line_start":284,"line_end":284,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13876,"byte_end":13883,"line_start":285,"line_end":285,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14634,"byte_end":14640,"line_start":301,"line_end":301,"column_start":10,"column_end":16},"name":"U32Str","qualname":"::U32Str","value":"UStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" String slice reference for `U32String`.","sig":null,"attributes":[{"value":"/ String slice reference for `U32String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13922,"byte_end":13965,"line_start":288,"line_end":288,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13966,"byte_end":13969,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ `U32Str` is to `U32String` as `str` is to `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":13970,"byte_end":14025,"line_start":290,"line_end":290,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14026,"byte_end":14029,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ `U32Str` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14030,"byte_end":14120,"line_start":292,"line_end":292,"column_start":1,"column_end":91}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14121,"byte_end":14211,"line_start":293,"line_end":293,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14212,"byte_end":14305,"line_start":294,"line_end":294,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14306,"byte_end":14405,"line_start":295,"line_end":295,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14406,"byte_end":14409,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ `WideCStr` should be used instead of nul-aware strings are required.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14410,"byte_end":14482,"line_start":297,"line_end":297,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14483,"byte_end":14486,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ `U32Str` can be converted to many other string types, including `OsString` and `String`, making","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14487,"byte_end":14586,"line_start":299,"line_end":299,"column_start":1,"column_end":100}},{"value":"/ proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14587,"byte_end":14624,"line_start":300,"line_end":300,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15799,"byte_end":15808,"line_start":329,"line_end":329,"column_start":10,"column_end":19},"name":"U32String","qualname":"::U32String","value":"UString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","sig":null,"attributes":[{"value":"/ An owned, mutable 32-bit wide string for FFI that is **not** nul-aware.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14655,"byte_end":14730,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14731,"byte_end":14734,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ `U32String` is not aware of nul values. Strings may or may not be nul-terminated, and may","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14735,"byte_end":14828,"line_start":305,"line_end":305,"column_start":1,"column_end":94}},{"value":"/ contain invalid and ill-formed UTF-32 data. These strings are intended to be used with","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14829,"byte_end":14919,"line_start":306,"line_end":306,"column_start":1,"column_end":91}},{"value":"/ FFI functions that directly use string length, where the strings are known to have proper","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":14920,"byte_end":15013,"line_start":307,"line_end":307,"column_start":1,"column_end":94}},{"value":"/ nul-termination already, or where strings are merely being passed through without modification.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15014,"byte_end":15113,"line_start":308,"line_end":308,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15114,"byte_end":15117,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ `U32CString` should be used instead if nul-aware 32-bit strings are required.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15118,"byte_end":15199,"line_start":310,"line_end":310,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15200,"byte_end":15203,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ `U32String` can be converted to and from many other standard Rust string types, including","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15204,"byte_end":15297,"line_start":312,"line_end":312,"column_start":1,"column_end":94}},{"value":"/ `OsString` and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15298,"byte_end":15367,"line_start":313,"line_end":313,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15368,"byte_end":15371,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15372,"byte_end":15386,"line_start":315,"line_end":315,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15387,"byte_end":15390,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32String` and shows how to convert a `U32String` to a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15391,"byte_end":15485,"line_start":317,"line_end":317,"column_start":1,"column_end":95}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15486,"byte_end":15512,"line_start":318,"line_end":318,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15513,"byte_end":15516,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15517,"byte_end":15528,"line_start":320,"line_end":320,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32String;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15529,"byte_end":15559,"line_start":321,"line_end":321,"column_start":1,"column_end":31}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15560,"byte_end":15579,"line_start":322,"line_end":322,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15580,"byte_end":15628,"line_start":323,"line_end":323,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32String::from_str(s);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15629,"byte_end":15667,"line_start":324,"line_end":324,"column_start":1,"column_end":39}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15668,"byte_end":15704,"line_start":325,"line_end":325,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15705,"byte_end":15747,"line_start":326,"line_end":326,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15748,"byte_end":15781,"line_start":327,"line_end":327,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15782,"byte_end":15789,"line_start":328,"line_end":328,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16438,"byte_end":16445,"line_start":340,"line_end":340,"column_start":10,"column_end":17},"name":"U32CStr","qualname":"::U32CStr","value":"UCStr<u32>","parent":null,"children":[],"decl_id":null,"docs":" C-style wide string reference for `U32CString`.","sig":null,"attributes":[{"value":"/ C-style wide string reference for `U32CString`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15826,"byte_end":15877,"line_start":331,"line_end":331,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15878,"byte_end":15881,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ `U32CStr` is aware of nul values. Unless unchecked conversions are used, all `U32CStr`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15882,"byte_end":15972,"line_start":333,"line_end":333,"column_start":1,"column_end":91}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":15973,"byte_end":16071,"line_start":334,"line_end":334,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16072,"byte_end":16170,"line_start":335,"line_end":335,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16171,"byte_end":16262,"line_start":336,"line_end":336,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16263,"byte_end":16266,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ `U32CStr` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16267,"byte_end":16357,"line_start":338,"line_end":338,"column_start":1,"column_end":91}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16358,"byte_end":16428,"line_start":339,"line_end":339,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17553,"byte_end":17563,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"name":"U32CString","qualname":"::U32CString","value":"UCString<u32>","parent":null,"children":[],"decl_id":null,"docs":" An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","sig":null,"attributes":[{"value":"/ An owned, mutable C-style wide string for FFI that is nul-aware and nul-terminated.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16461,"byte_end":16548,"line_start":342,"line_end":342,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16549,"byte_end":16552,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ `U32CString` is aware of nul values. Unless unchecked conversions are used, all `U32CString`","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16553,"byte_end":16649,"line_start":344,"line_end":344,"column_start":1,"column_end":97}},{"value":"/ strings end with a nul-terminator in the underlying buffer and contain no internal nul values.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16650,"byte_end":16748,"line_start":345,"line_end":345,"column_start":1,"column_end":99}},{"value":"/ The strings may still contain invalid or ill-formed UTF-32 data. These strings are intended to","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16749,"byte_end":16847,"line_start":346,"line_end":346,"column_start":1,"column_end":99}},{"value":"/ be used with FFI functions such as Windows API that may require nul-terminated strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16848,"byte_end":16939,"line_start":347,"line_end":347,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16940,"byte_end":16943,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ `U32CString` can be converted to and from many other string types, including `U32String`,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":16944,"byte_end":17037,"line_start":349,"line_end":349,"column_start":1,"column_end":94}},{"value":"/ `OsString`, and `String`, making proper Unicode FFI safe and easy.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17038,"byte_end":17108,"line_start":350,"line_end":350,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17109,"byte_end":17112,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17113,"byte_end":17127,"line_start":352,"line_end":352,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17128,"byte_end":17131,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ The following example constructs a `U32CString` and shows how to convert a `U32CString` to a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17132,"byte_end":17228,"line_start":354,"line_end":354,"column_start":1,"column_end":97}},{"value":"/ regular Rust `String`.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17229,"byte_end":17255,"line_start":355,"line_end":355,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17256,"byte_end":17259,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17260,"byte_end":17271,"line_start":357,"line_end":357,"column_start":1,"column_end":12}},{"value":"/ use widestring::U32CString;","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17272,"byte_end":17303,"line_start":358,"line_end":358,"column_start":1,"column_end":32}},{"value":"/ let s = \"Test\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17304,"byte_end":17323,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/ // Create a wide string from the rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17324,"byte_end":17372,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/ let wstr = U32CString::from_str(s).unwrap();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17373,"byte_end":17421,"line_start":361,"line_end":361,"column_start":1,"column_end":49}},{"value":"/ // Convert back to a rust string","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17422,"byte_end":17458,"line_start":362,"line_end":362,"column_start":1,"column_end":37}},{"value":"/ let rust_str = wstr.to_string_lossy();","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17459,"byte_end":17501,"line_start":363,"line_end":363,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rust_str, \"Test\");","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17502,"byte_end":17535,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":17536,"byte_end":17543,"line_start":365,"line_end":365,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18562,"byte_end":18572,"line_start":386,"line_end":386,"column_start":10,"column_end":20},"name":"WideString","qualname":"::WideString","value":"U16String","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18417,"byte_end":18432,"line_start":384,"line_end":384,"column_start":1,"column_end":16}},{"value":"/ Alias for `U16String` or `U32String` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18433,"byte_end":18552,"line_start":385,"line_end":385,"column_start":1,"column_end":120}}]},{"kind":"Type","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18733,"byte_end":18744,"line_start":389,"line_end":389,"column_start":10,"column_end":21},"name":"WideCString","qualname":"::WideCString","value":"U16CString","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16CString` or `U32CString` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18586,"byte_end":18601,"line_start":387,"line_end":387,"column_start":1,"column_end":16}},{"value":"/ Alias for `U16CString` or `U32CString` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18602,"byte_end":18723,"line_start":388,"line_end":388,"column_start":1,"column_end":122}}]},{"kind":"Type","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18898,"byte_end":18905,"line_start":392,"line_end":392,"column_start":10,"column_end":17},"name":"WideStr","qualname":"::WideStr","value":"U16Str","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16Str` or `U32Str` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18759,"byte_end":18774,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/ Alias for `U16Str` or `U32Str` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18775,"byte_end":18888,"line_start":391,"line_end":391,"column_start":1,"column_end":114}}]},{"kind":"Type","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":19057,"byte_end":19065,"line_start":395,"line_end":395,"column_start":10,"column_end":18},"name":"WideCStr","qualname":"::WideCStr","value":"U16CStr","parent":null,"children":[],"decl_id":null,"docs":" Alias for `U16CStr` or `U32CStr` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18916,"byte_end":18931,"line_start":393,"line_end":393,"column_start":1,"column_end":16}},{"value":"/ Alias for `U16CStr` or `U32CStr` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":18932,"byte_end":19047,"line_start":394,"line_end":394,"column_start":1,"column_end":116}}]},{"kind":"Type","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":19210,"byte_end":19218,"line_start":398,"line_end":398,"column_start":10,"column_end":18},"name":"WideChar","qualname":"::WideChar","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Alias for `u16` or `u32` depending on platform. Intended to match typical C `wchar_t` size on platform.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":19077,"byte_end":19092,"line_start":396,"line_end":396,"column_start":1,"column_end":16}},{"value":"/ Alias for `u16` or `u32` depending on platform. Intended to match typical C `wchar_t` size on platform.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":19093,"byte_end":19200,"line_start":397,"line_end":397,"column_start":1,"column_end":108}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22912,"byte_end":22920,"line_start":84,"line_end":84,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35220,"byte_end":35228,"line_start":411,"line_end":411,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47641,"byte_end":47649,"line_start":748,"line_end":748,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67851,"byte_end":67856,"line_start":1273,"line_end":1273,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75252,"byte_end":75257,"line_start":1474,"line_end":1474,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77368,"byte_end":77373,"line_start":1541,"line_end":1541,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83066,"byte_end":83074,"line_start":1689,"line_end":1689,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83189,"byte_end":83192,"line_start":1695,"line_end":1695,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83369,"byte_end":83372,"line_start":1701,"line_end":1701,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83532,"byte_end":83540,"line_start":1707,"line_end":1707,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83650,"byte_end":83658,"line_start":1713,"line_end":1713,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83776,"byte_end":83783,"line_start":1719,"line_end":1719,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83923,"byte_end":83931,"line_start":1725,"line_end":1725,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84067,"byte_end":84075,"line_start":1731,"line_end":1731,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84271,"byte_end":84279,"line_start":1740,"line_end":1740,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84787,"byte_end":84795,"line_start":1763,"line_end":1763,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84933,"byte_end":84941,"line_start":1770,"line_end":1770,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85260,"byte_end":85268,"line_start":1780,"line_end":1780,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85457,"byte_end":85465,"line_start":1789,"line_end":1789,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85561,"byte_end":85566,"line_start":1795,"line_end":1795,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85725,"byte_end":85728,"line_start":1802,"line_end":1802,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85910,"byte_end":85913,"line_start":1808,"line_end":1808,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86083,"byte_end":86088,"line_start":1814,"line_end":1814,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86183,"byte_end":86191,"line_start":1820,"line_end":1820,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86285,"byte_end":86290,"line_start":1826,"line_end":1826,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86390,"byte_end":86398,"line_start":1832,"line_end":1832,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86510,"byte_end":86513,"line_start":1838,"line_end":1838,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86758,"byte_end":86766,"line_start":1845,"line_end":1845,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86898,"byte_end":86901,"line_start":1852,"line_end":1852,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87040,"byte_end":87043,"line_start":1859,"line_end":1859,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87243,"byte_end":87251,"line_start":1866,"line_end":1866,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87638,"byte_end":87646,"line_start":1879,"line_end":1879,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87752,"byte_end":87760,"line_start":1885,"line_end":1885,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87941,"byte_end":87949,"line_start":1891,"line_end":1891,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88041,"byte_end":88056,"line_start":1897,"line_end":1897,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88300,"byte_end":88315,"line_start":1905,"line_end":1905,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88487,"byte_end":88502,"line_start":1911,"line_end":1911,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91565,"byte_end":91572,"line_start":81,"line_end":81,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98415,"byte_end":98422,"line_start":303,"line_end":303,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101147,"byte_end":101154,"line_start":387,"line_end":387,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105158,"byte_end":105162,"line_start":506,"line_end":506,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107461,"byte_end":107465,"line_start":579,"line_end":579,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109478,"byte_end":109482,"line_start":645,"line_end":645,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113608,"byte_end":113615,"line_start":766,"line_end":766,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113729,"byte_end":113732,"line_start":772,"line_end":772,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113878,"byte_end":113881,"line_start":778,"line_end":778,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114010,"byte_end":114013,"line_start":784,"line_end":784,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114126,"byte_end":114129,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114242,"byte_end":114245,"line_start":796,"line_end":796,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114355,"byte_end":114362,"line_start":802,"line_end":802,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114461,"byte_end":114468,"line_start":808,"line_end":808,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114569,"byte_end":114576,"line_start":814,"line_end":814,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114682,"byte_end":114689,"line_start":820,"line_end":820,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114799,"byte_end":114807,"line_start":826,"line_end":826,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114911,"byte_end":114919,"line_start":832,"line_end":832,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115058,"byte_end":115065,"line_start":838,"line_end":838,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115200,"byte_end":115207,"line_start":844,"line_end":844,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115400,"byte_end":115407,"line_start":853,"line_end":853,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115554,"byte_end":115561,"line_start":862,"line_end":862,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115705,"byte_end":115712,"line_start":869,"line_end":869,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115904,"byte_end":115911,"line_start":876,"line_end":876,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116068,"byte_end":116075,"line_start":883,"line_end":883,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116290,"byte_end":116297,"line_start":890,"line_end":890,"column_start":65,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116498,"byte_end":116505,"line_start":897,"line_end":897,"column_start":66,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116730,"byte_end":116737,"line_start":904,"line_end":904,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116832,"byte_end":116836,"line_start":910,"line_end":910,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116991,"byte_end":116994,"line_start":917,"line_end":917,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117145,"byte_end":117148,"line_start":923,"line_end":923,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117287,"byte_end":117291,"line_start":929,"line_end":929,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117385,"byte_end":117392,"line_start":935,"line_end":935,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117485,"byte_end":117489,"line_start":941,"line_end":941,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117589,"byte_end":117596,"line_start":947,"line_end":947,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117707,"byte_end":117710,"line_start":953,"line_end":953,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117950,"byte_end":117957,"line_start":961,"line_end":961,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118080,"byte_end":118083,"line_start":967,"line_end":967,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118196,"byte_end":118199,"line_start":973,"line_end":973,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118411,"byte_end":118425,"line_start":981,"line_end":981,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118592,"byte_end":118606,"line_start":987,"line_end":987,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":22912,"byte_end":22920,"line_start":84,"line_end":84,"column_start":16,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":35220,"byte_end":35228,"line_start":411,"line_end":411,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":47641,"byte_end":47649,"line_start":748,"line_end":748,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":67851,"byte_end":67856,"line_start":1273,"line_end":1273,"column_start":16,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":75252,"byte_end":75257,"line_start":1474,"line_end":1474,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":77368,"byte_end":77373,"line_start":1541,"line_end":1541,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83066,"byte_end":83074,"line_start":1689,"line_end":1689,"column_start":33,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1804}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83189,"byte_end":83192,"line_start":1695,"line_end":1695,"column_start":47,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83369,"byte_end":83372,"line_start":1701,"line_end":1701,"column_start":47,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83532,"byte_end":83540,"line_start":1707,"line_end":1707,"column_start":30,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":6292},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83650,"byte_end":83658,"line_start":1713,"line_end":1713,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":6292},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83776,"byte_end":83783,"line_start":1719,"line_end":1719,"column_start":38,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":83923,"byte_end":83931,"line_start":1725,"line_end":1725,"column_start":65,"column_end":73},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84067,"byte_end":84075,"line_start":1731,"line_end":1731,"column_start":57,"column_end":65},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":2133}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84271,"byte_end":84279,"line_start":1740,"line_end":1740,"column_start":36,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":2054}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84787,"byte_end":84795,"line_start":1763,"line_end":1763,"column_start":18,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":84933,"byte_end":84941,"line_start":1770,"line_end":1770,"column_start":18,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85260,"byte_end":85268,"line_start":1780,"line_end":1780,"column_start":25,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":2076}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85457,"byte_end":85465,"line_start":1789,"line_end":1789,"column_start":50,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1571}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85561,"byte_end":85566,"line_start":1795,"line_end":1795,"column_start":28,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":488},"to":{"krate":5,"index":317}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85725,"byte_end":85728,"line_start":1802,"line_end":1802,"column_start":48,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":85910,"byte_end":85913,"line_start":1808,"line_end":1808,"column_start":48,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86083,"byte_end":86088,"line_start":1814,"line_end":1814,"column_start":36,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86183,"byte_end":86191,"line_start":1820,"line_end":1820,"column_start":36,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86285,"byte_end":86290,"line_start":1826,"line_end":1826,"column_start":31,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86390,"byte_end":86398,"line_start":1832,"line_end":1832,"column_start":31,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86510,"byte_end":86513,"line_start":1838,"line_end":1838,"column_start":43,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86758,"byte_end":86766,"line_start":1845,"line_end":1845,"column_start":40,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":86898,"byte_end":86901,"line_start":1852,"line_end":1852,"column_start":38,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87040,"byte_end":87043,"line_start":1859,"line_end":1859,"column_start":28,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87243,"byte_end":87251,"line_start":1866,"line_end":1866,"column_start":16,"column_end":24},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87638,"byte_end":87646,"line_start":1879,"line_end":1879,"column_start":33,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":1804}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87752,"byte_end":87760,"line_start":1885,"line_end":1885,"column_start":38,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":5990}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":87941,"byte_end":87949,"line_start":1891,"line_end":1891,"column_start":38,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":519},"to":{"krate":1,"index":1624}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88041,"byte_end":88056,"line_start":1897,"line_end":1897,"column_start":16,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88300,"byte_end":88315,"line_start":1905,"line_end":1905,"column_start":38,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":5990}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ucstring.rs","byte_start":88487,"byte_end":88502,"line_start":1911,"line_end":1911,"column_start":38,"column_end":53},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":541},"to":{"krate":1,"index":1624}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":91565,"byte_end":91572,"line_start":81,"line_end":81,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":98415,"byte_end":98422,"line_start":303,"line_end":303,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":101147,"byte_end":101154,"line_start":387,"line_end":387,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":105158,"byte_end":105162,"line_start":506,"line_end":506,"column_start":16,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":107461,"byte_end":107465,"line_start":579,"line_end":579,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":109478,"byte_end":109482,"line_start":645,"line_end":645,"column_start":6,"column_end":10},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113608,"byte_end":113615,"line_start":766,"line_end":766,"column_start":33,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1804}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113729,"byte_end":113732,"line_start":772,"line_end":772,"column_start":46,"column_end":49},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":113878,"byte_end":113881,"line_start":778,"line_end":778,"column_start":46,"column_end":49},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114010,"byte_end":114013,"line_start":784,"line_end":784,"column_start":29,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":5,"index":4064},"to":{"krate":2,"index":1804}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114126,"byte_end":114129,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":4064},"to":{"krate":2,"index":1804}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114242,"byte_end":114245,"line_start":796,"line_end":796,"column_start":29,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":5,"index":4064},"to":{"krate":2,"index":1804}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114355,"byte_end":114362,"line_start":802,"line_end":802,"column_start":23,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114461,"byte_end":114468,"line_start":808,"line_end":808,"column_start":23,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114569,"byte_end":114576,"line_start":814,"line_end":814,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114682,"byte_end":114689,"line_start":820,"line_end":820,"column_start":25,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114799,"byte_end":114807,"line_start":826,"line_end":826,"column_start":29,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":6292},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":114911,"byte_end":114919,"line_start":832,"line_end":832,"column_start":29,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":6292},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115058,"byte_end":115065,"line_start":838,"line_end":838,"column_start":64,"column_end":71},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115200,"byte_end":115207,"line_start":844,"line_end":844,"column_start":57,"column_end":64},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":2133}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115400,"byte_end":115407,"line_start":853,"line_end":853,"column_start":36,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":2054}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115554,"byte_end":115561,"line_start":862,"line_end":862,"column_start":39,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1619}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115705,"byte_end":115712,"line_start":869,"line_end":869,"column_start":40,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1656}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":115904,"byte_end":115911,"line_start":876,"line_end":876,"column_start":47,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1619}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116068,"byte_end":116075,"line_start":883,"line_end":883,"column_start":48,"column_end":55},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1656}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116290,"byte_end":116297,"line_start":890,"line_end":890,"column_start":65,"column_end":72},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1619}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116498,"byte_end":116505,"line_start":897,"line_end":897,"column_start":66,"column_end":73},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1656}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116730,"byte_end":116737,"line_start":904,"line_end":904,"column_start":49,"column_end":56},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1571}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116832,"byte_end":116836,"line_start":910,"line_end":910,"column_start":28,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":599},"to":{"krate":5,"index":317}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":116991,"byte_end":116994,"line_start":917,"line_end":917,"column_start":47,"column_end":50},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117145,"byte_end":117148,"line_start":923,"line_end":923,"column_start":47,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":326},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117287,"byte_end":117291,"line_start":929,"line_end":929,"column_start":35,"column_end":39},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117385,"byte_end":117392,"line_start":935,"line_end":935,"column_start":35,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117485,"byte_end":117489,"line_start":941,"line_end":941,"column_start":31,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117589,"byte_end":117596,"line_start":947,"line_end":947,"column_start":31,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117707,"byte_end":117710,"line_start":953,"line_end":953,"column_start":42,"column_end":45},"kind":{"Impl":{"id":72}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":117950,"byte_end":117957,"line_start":961,"line_end":961,"column_start":39,"column_end":46},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118080,"byte_end":118083,"line_start":967,"line_end":967,"column_start":37,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118196,"byte_end":118199,"line_start":973,"line_end":973,"column_start":28,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":84},"to":{"krate":2,"index":1874}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118411,"byte_end":118425,"line_start":981,"line_end":981,"column_start":28,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":5990}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\ustring.rs","byte_start":118592,"byte_end":118606,"line_start":987,"line_end":987,"column_start":28,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":1624}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10089,"byte_end":10094,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":5985},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10097,"byte_end":10102,"line_start":195,"line_end":195,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10105,"byte_end":10109,"line_start":195,"line_end":195,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10112,"byte_end":10115,"line_start":195,"line_end":195,"column_start":41,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1645},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\widestring-0.4.0\\src\\lib.rs","byte_start":10118,"byte_end":10120,"line_start":195,"line_end":195,"column_start":47,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":435}}]}