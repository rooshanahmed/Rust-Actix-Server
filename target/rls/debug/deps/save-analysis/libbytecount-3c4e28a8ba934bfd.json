{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0","program":"C:\\Users\\Rooshan Ahmed\\.rustup\\toolchains\\stable-i686-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bytecount","C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=3c4e28a8ba934bfd","-C","extra-filename=-3c4e28a8ba934bfd","--out-dir","c:\\Users\\Rooshan Ahmed\\Desktop\\active\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Rooshan Ahmed\\Desktop\\active\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Rooshan Ahmed\\.rustup/toolchains/stable-i686-pc-windows-msvc"],"output":"c:\\Users\\Rooshan Ahmed\\Desktop\\active\\target\\rls\\debug\\deps\\libbytecount-3c4e28a8ba934bfd.rmeta"},"prelude":{"crate_id":{"name":"bytecount","disambiguator":[723241898821829678,14137080761578232390]},"crate_root":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src","external_crates":[{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[15493884781544242704,10916431212020240685]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13800800064131758149,6552388683574802790]}},{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[858078859117163494,4852275181801050944]}}],"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":4208,"line_start":1,"line_end":138,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1460,"byte_end":1461,"line_start":44,"line_end":44,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"naive_num_chars, naive_count","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":4208,"line_start":1,"line_end":138,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" count occurrences of a given byte, or the number of UTF-8 code points, in a\n byte slice, fast.","sig":null,"attributes":[{"value":"! count occurrences of a given byte, or the number of UTF-8 code points, in a","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! byte slice, fast.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":80,"byte_end":101,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":102,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This crate has the [`count`](fn.count.html) method to count byte","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"! occurrences (for example newlines) in a larger `&[u8]` slice.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":175,"byte_end":240,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":241,"byte_end":244,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":245,"byte_end":261,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":262,"byte_end":265,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":266,"byte_end":277,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"! assert_eq!(5, bytecount::count(b\"Hello, this is the bytecount crate!\", b' '));","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":278,"byte_end":360,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"! ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":361,"byte_end":368,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":369,"byte_end":372,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Also there is a [`num_chars`](fn.num_chars.html) method to count","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":373,"byte_end":441,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"! the number of UTF8 characters in a slice. It will work the same as","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":442,"byte_end":512,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! `str::chars().count()` for byte slices of correct UTF-8 character","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":513,"byte_end":582,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"! sequences. The result will likely be off for invalid sequences,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":583,"byte_end":650,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"! although the result is guaranteed to be between `0` and","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":651,"byte_end":710,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"! `[_]::len()`, inclusive.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":711,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":740,"byte_end":743,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Example:","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":744,"byte_end":756,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":757,"byte_end":760,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":761,"byte_end":772,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"! let sequence = \"Wenn ich ein Vöglein wär, flög ich zu Dir!\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":773,"byte_end":840,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"! assert_eq!(sequence.chars().count(),","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":841,"byte_end":881,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"!            bytecount::num_chars(sequence.as_bytes()));","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":882,"byte_end":940,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"! ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":941,"byte_end":948,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":949,"byte_end":952,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! For completeness and easy comparison, the \"naive\" versions of both","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":953,"byte_end":1023,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"! count and num_chars are provided. Those are also faster if used on","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1024,"byte_end":1094,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"! predominantly small strings. The","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1095,"byte_end":1131,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"! [`naive_count_32`](fn.naive_count_32.html) method can be faster","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1132,"byte_end":1199,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"! still on small strings.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1200,"byte_end":1227,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1229,"byte_end":1251,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1305,"byte_end":1311,"line_start":36,"line_end":36,"column_start":53,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4489,"byte_end":4503,"line_start":11,"line_end":11,"column_start":8,"column_end":22},"name":"naive_count_32","qualname":"::naive::naive_count_32","value":"fn (haystack: &[u8], needle: u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count up to `(2^32)-1` occurrences of a byte in a slice\n of bytes, simple","sig":null,"attributes":[{"value":"/ Count up to `(2^32)-1` occurrences of a byte in a slice","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4210,"byte_end":4269,"line_start":1,"line_end":1,"column_start":1,"column_end":60}},{"value":"/ of bytes, simple","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4270,"byte_end":4290,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4291,"byte_end":4294,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4295,"byte_end":4308,"line_start":4,"line_end":4,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4309,"byte_end":4312,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4313,"byte_end":4320,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ let s = b\"This is yet another Text with spaces\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4321,"byte_end":4373,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/ let number_of_spaces = bytecount::naive_count_32(s, b' ');","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4374,"byte_end":4436,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(number_of_spaces, 6);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4437,"byte_end":4473,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4474,"byte_end":4481,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4873,"byte_end":4884,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"naive_count","qualname":"::naive::naive_count","value":"fn (utf8_chars: &[u8], needle: u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count occurrences of a byte in a slice of bytes, simple","sig":null,"attributes":[{"value":"/ Count occurrences of a byte in a slice of bytes, simple","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4618,"byte_end":4677,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4678,"byte_end":4681,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4682,"byte_end":4695,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4696,"byte_end":4699,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4700,"byte_end":4707,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ let s = b\"This is yet another Text with spaces\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4708,"byte_end":4760,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ let number_of_spaces = bytecount::naive_count(s, b' ');","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4761,"byte_end":4820,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(number_of_spaces, 6);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4821,"byte_end":4857,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4858,"byte_end":4865,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5401,"byte_end":5416,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"naive_num_chars","qualname":"::naive::naive_num_chars","value":"fn (utf8_chars: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of UTF-8 encoded unicode codepoints in a slice of bytes, simple","sig":null,"attributes":[{"value":"/ Count the number of UTF-8 encoded unicode codepoints in a slice of bytes, simple","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":4996,"byte_end":5080,"line_start":28,"line_end":28,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5081,"byte_end":5084,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function is safe to use on any byte array, valid UTF-8 or not,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5085,"byte_end":5156,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ but the output is only meaningful for well-formed UTF-8.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5157,"byte_end":5217,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5218,"byte_end":5221,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5222,"byte_end":5235,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5236,"byte_end":5239,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5240,"byte_end":5247,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ let swordfish = \"メカジキ\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5248,"byte_end":5283,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ let char_count = bytecount::naive_num_chars(swordfish.as_bytes());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5284,"byte_end":5354,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(char_count, 4);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5355,"byte_end":5385,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\naive.rs","byte_start":5386,"byte_end":5393,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1869,"byte_end":1874,"line_start":62,"line_end":62,"column_start":8,"column_end":13},"name":"count","qualname":"::count","value":"fn (haystack: &[u8], needle: u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count occurrences of a byte in a slice of bytes, fast","sig":null,"attributes":[{"value":"/ Count occurrences of a byte in a slice of bytes, fast","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1631,"byte_end":1688,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1689,"byte_end":1692,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1693,"byte_end":1707,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1708,"byte_end":1711,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1712,"byte_end":1719,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ let s = b\"This is a Text with spaces\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1720,"byte_end":1762,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/ let number_of_spaces = bytecount::count(s, b' ');","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1763,"byte_end":1816,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(number_of_spaces, 5);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1817,"byte_end":1853,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":1854,"byte_end":1861,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3243,"byte_end":3252,"line_start":107,"line_end":107,"column_start":8,"column_end":17},"name":"num_chars","qualname":"::num_chars","value":"fn (utf8_chars: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of UTF-8 encoded unicode codepoints in a slice of bytes, fast","sig":null,"attributes":[{"value":"/ Count the number of UTF-8 encoded unicode codepoints in a slice of bytes, fast","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":2846,"byte_end":2928,"line_start":95,"line_end":95,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":2929,"byte_end":2932,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This function is safe to use on any byte array, valid UTF-8 or not,","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":2933,"byte_end":3004,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ but the output is only meaningful for well-formed UTF-8.","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3005,"byte_end":3065,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3066,"byte_end":3069,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3070,"byte_end":3083,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3084,"byte_end":3087,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3088,"byte_end":3095,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ let swordfish = \"メカジキ\";","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3096,"byte_end":3131,"line_start":103,"line_end":103,"column_start":1,"column_end":28}},{"value":"/ let char_count = bytecount::num_chars(swordfish.as_bytes());","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3132,"byte_end":3196,"line_start":104,"line_end":104,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(char_count, 4);","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3197,"byte_end":3227,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Rooshan Ahmed\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bytecount-0.4.0\\src\\lib.rs","byte_start":3228,"byte_end":3235,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}